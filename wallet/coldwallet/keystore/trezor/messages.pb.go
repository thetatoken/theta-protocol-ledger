// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package trezor

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
// const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// Mapping between Trezor wire identifier (uint) and a protobuf message
type MessageType int32

const (
	MessageType_MessageType_Initialize            MessageType = 0
	MessageType_MessageType_Ping                  MessageType = 1
	MessageType_MessageType_Success               MessageType = 2
	MessageType_MessageType_Failure               MessageType = 3
	MessageType_MessageType_ChangePin             MessageType = 4
	MessageType_MessageType_WipeDevice            MessageType = 5
	MessageType_MessageType_FirmwareErase         MessageType = 6
	MessageType_MessageType_FirmwareUpload        MessageType = 7
	MessageType_MessageType_FirmwareRequest       MessageType = 8
	MessageType_MessageType_GetEntropy            MessageType = 9
	MessageType_MessageType_Entropy               MessageType = 10
	MessageType_MessageType_GetPublicKey          MessageType = 11
	MessageType_MessageType_PublicKey             MessageType = 12
	MessageType_MessageType_LoadDevice            MessageType = 13
	MessageType_MessageType_ResetDevice           MessageType = 14
	MessageType_MessageType_SignTx                MessageType = 15
	MessageType_MessageType_SimpleSignTx          MessageType = 16 // Deprecated: Do not use.
	MessageType_MessageType_Features              MessageType = 17
	MessageType_MessageType_PinMatrixRequest      MessageType = 18
	MessageType_MessageType_PinMatrixAck          MessageType = 19
	MessageType_MessageType_Cancel                MessageType = 20
	MessageType_MessageType_TxRequest             MessageType = 21
	MessageType_MessageType_TxAck                 MessageType = 22
	MessageType_MessageType_CipherKeyValue        MessageType = 23
	MessageType_MessageType_ClearSession          MessageType = 24
	MessageType_MessageType_ApplySettings         MessageType = 25
	MessageType_MessageType_ButtonRequest         MessageType = 26
	MessageType_MessageType_ButtonAck             MessageType = 27
	MessageType_MessageType_ApplyFlags            MessageType = 28
	MessageType_MessageType_GetAddress            MessageType = 29
	MessageType_MessageType_Address               MessageType = 30
	MessageType_MessageType_SelfTest              MessageType = 32
	MessageType_MessageType_BackupDevice          MessageType = 34
	MessageType_MessageType_EntropyRequest        MessageType = 35
	MessageType_MessageType_EntropyAck            MessageType = 36
	MessageType_MessageType_SignMessage           MessageType = 38
	MessageType_MessageType_VerifyMessage         MessageType = 39
	MessageType_MessageType_MessageSignature      MessageType = 40
	MessageType_MessageType_PassphraseRequest     MessageType = 41
	MessageType_MessageType_PassphraseAck         MessageType = 42
	MessageType_MessageType_EstimateTxSize        MessageType = 43 // Deprecated: Do not use.
	MessageType_MessageType_TxSize                MessageType = 44 // Deprecated: Do not use.
	MessageType_MessageType_RecoveryDevice        MessageType = 45
	MessageType_MessageType_WordRequest           MessageType = 46
	MessageType_MessageType_WordAck               MessageType = 47
	MessageType_MessageType_CipheredKeyValue      MessageType = 48
	MessageType_MessageType_EncryptMessage        MessageType = 49 // Deprecated: Do not use.
	MessageType_MessageType_EncryptedMessage      MessageType = 50 // Deprecated: Do not use.
	MessageType_MessageType_DecryptMessage        MessageType = 51 // Deprecated: Do not use.
	MessageType_MessageType_DecryptedMessage      MessageType = 52 // Deprecated: Do not use.
	MessageType_MessageType_SignIdentity          MessageType = 53
	MessageType_MessageType_SignedIdentity        MessageType = 54
	MessageType_MessageType_GetFeatures           MessageType = 55
	MessageType_MessageType_ThetaGetAddress       MessageType = 56
	MessageType_MessageType_ThetaAddress          MessageType = 57
	MessageType_MessageType_ThetaSignTx           MessageType = 58
	MessageType_MessageType_ThetaTxRequest        MessageType = 59
	MessageType_MessageType_ThetaTxAck            MessageType = 60
	MessageType_MessageType_GetECDHSessionKey     MessageType = 61
	MessageType_MessageType_ECDHSessionKey        MessageType = 62
	MessageType_MessageType_SetU2FCounter         MessageType = 63
	MessageType_MessageType_ThetaSignMessage      MessageType = 64
	MessageType_MessageType_ThetaVerifyMessage    MessageType = 65
	MessageType_MessageType_ThetaMessageSignature MessageType = 66
	MessageType_MessageType_DebugLinkDecision     MessageType = 100
	MessageType_MessageType_DebugLinkGetState     MessageType = 101
	MessageType_MessageType_DebugLinkState        MessageType = 102
	MessageType_MessageType_DebugLinkStop         MessageType = 103
	MessageType_MessageType_DebugLinkLog          MessageType = 104
	MessageType_MessageType_DebugLinkMemoryRead   MessageType = 110
	MessageType_MessageType_DebugLinkMemory       MessageType = 111
	MessageType_MessageType_DebugLinkMemoryWrite  MessageType = 112
	MessageType_MessageType_DebugLinkFlashErase   MessageType = 113
)

var MessageType_name = map[int32]string{
	0:   "MessageType_Initialize",
	1:   "MessageType_Ping",
	2:   "MessageType_Success",
	3:   "MessageType_Failure",
	4:   "MessageType_ChangePin",
	5:   "MessageType_WipeDevice",
	6:   "MessageType_FirmwareErase",
	7:   "MessageType_FirmwareUpload",
	8:   "MessageType_FirmwareRequest",
	9:   "MessageType_GetEntropy",
	10:  "MessageType_Entropy",
	11:  "MessageType_GetPublicKey",
	12:  "MessageType_PublicKey",
	13:  "MessageType_LoadDevice",
	14:  "MessageType_ResetDevice",
	15:  "MessageType_SignTx",
	16:  "MessageType_SimpleSignTx",
	17:  "MessageType_Features",
	18:  "MessageType_PinMatrixRequest",
	19:  "MessageType_PinMatrixAck",
	20:  "MessageType_Cancel",
	21:  "MessageType_TxRequest",
	22:  "MessageType_TxAck",
	23:  "MessageType_CipherKeyValue",
	24:  "MessageType_ClearSession",
	25:  "MessageType_ApplySettings",
	26:  "MessageType_ButtonRequest",
	27:  "MessageType_ButtonAck",
	28:  "MessageType_ApplyFlags",
	29:  "MessageType_GetAddress",
	30:  "MessageType_Address",
	32:  "MessageType_SelfTest",
	34:  "MessageType_BackupDevice",
	35:  "MessageType_EntropyRequest",
	36:  "MessageType_EntropyAck",
	38:  "MessageType_SignMessage",
	39:  "MessageType_VerifyMessage",
	40:  "MessageType_MessageSignature",
	41:  "MessageType_PassphraseRequest",
	42:  "MessageType_PassphraseAck",
	43:  "MessageType_EstimateTxSize",
	44:  "MessageType_TxSize",
	45:  "MessageType_RecoveryDevice",
	46:  "MessageType_WordRequest",
	47:  "MessageType_WordAck",
	48:  "MessageType_CipheredKeyValue",
	49:  "MessageType_EncryptMessage",
	50:  "MessageType_EncryptedMessage",
	51:  "MessageType_DecryptMessage",
	52:  "MessageType_DecryptedMessage",
	53:  "MessageType_SignIdentity",
	54:  "MessageType_SignedIdentity",
	55:  "MessageType_GetFeatures",
	56:  "MessageType_ThetaGetAddress",
	57:  "MessageType_ThetaAddress",
	58:  "MessageType_ThetaSignTx",
	59:  "MessageType_ThetaTxRequest",
	60:  "MessageType_ThetaTxAck",
	61:  "MessageType_GetECDHSessionKey",
	62:  "MessageType_ECDHSessionKey",
	63:  "MessageType_SetU2FCounter",
	64:  "MessageType_ThetaSignMessage",
	65:  "MessageType_ThetaVerifyMessage",
	66:  "MessageType_ThetaMessageSignature",
	100: "MessageType_DebugLinkDecision",
	101: "MessageType_DebugLinkGetState",
	102: "MessageType_DebugLinkState",
	103: "MessageType_DebugLinkStop",
	104: "MessageType_DebugLinkLog",
	110: "MessageType_DebugLinkMemoryRead",
	111: "MessageType_DebugLinkMemory",
	112: "MessageType_DebugLinkMemoryWrite",
	113: "MessageType_DebugLinkFlashErase",
}

var MessageType_value = map[string]int32{
	"MessageType_Initialize":            0,
	"MessageType_Ping":                  1,
	"MessageType_Success":               2,
	"MessageType_Failure":               3,
	"MessageType_ChangePin":             4,
	"MessageType_WipeDevice":            5,
	"MessageType_FirmwareErase":         6,
	"MessageType_FirmwareUpload":        7,
	"MessageType_FirmwareRequest":       8,
	"MessageType_GetEntropy":            9,
	"MessageType_Entropy":               10,
	"MessageType_GetPublicKey":          11,
	"MessageType_PublicKey":             12,
	"MessageType_LoadDevice":            13,
	"MessageType_ResetDevice":           14,
	"MessageType_SignTx":                15,
	"MessageType_SimpleSignTx":          16,
	"MessageType_Features":              17,
	"MessageType_PinMatrixRequest":      18,
	"MessageType_PinMatrixAck":          19,
	"MessageType_Cancel":                20,
	"MessageType_TxRequest":             21,
	"MessageType_TxAck":                 22,
	"MessageType_CipherKeyValue":        23,
	"MessageType_ClearSession":          24,
	"MessageType_ApplySettings":         25,
	"MessageType_ButtonRequest":         26,
	"MessageType_ButtonAck":             27,
	"MessageType_ApplyFlags":            28,
	"MessageType_GetAddress":            29,
	"MessageType_Address":               30,
	"MessageType_SelfTest":              32,
	"MessageType_BackupDevice":          34,
	"MessageType_EntropyRequest":        35,
	"MessageType_EntropyAck":            36,
	"MessageType_SignMessage":           38,
	"MessageType_VerifyMessage":         39,
	"MessageType_MessageSignature":      40,
	"MessageType_PassphraseRequest":     41,
	"MessageType_PassphraseAck":         42,
	"MessageType_EstimateTxSize":        43,
	"MessageType_TxSize":                44,
	"MessageType_RecoveryDevice":        45,
	"MessageType_WordRequest":           46,
	"MessageType_WordAck":               47,
	"MessageType_CipheredKeyValue":      48,
	"MessageType_EncryptMessage":        49,
	"MessageType_EncryptedMessage":      50,
	"MessageType_DecryptMessage":        51,
	"MessageType_DecryptedMessage":      52,
	"MessageType_SignIdentity":          53,
	"MessageType_SignedIdentity":        54,
	"MessageType_GetFeatures":           55,
	"MessageType_ThetaGetAddress":       56,
	"MessageType_ThetaAddress":          57,
	"MessageType_ThetaSignTx":           58,
	"MessageType_ThetaTxRequest":        59,
	"MessageType_ThetaTxAck":            60,
	"MessageType_GetECDHSessionKey":     61,
	"MessageType_ECDHSessionKey":        62,
	"MessageType_SetU2FCounter":         63,
	"MessageType_ThetaSignMessage":      64,
	"MessageType_ThetaVerifyMessage":    65,
	"MessageType_ThetaMessageSignature": 66,
	"MessageType_DebugLinkDecision":     100,
	"MessageType_DebugLinkGetState":     101,
	"MessageType_DebugLinkState":        102,
	"MessageType_DebugLinkStop":         103,
	"MessageType_DebugLinkLog":          104,
	"MessageType_DebugLinkMemoryRead":   110,
	"MessageType_DebugLinkMemory":       111,
	"MessageType_DebugLinkMemoryWrite":  112,
	"MessageType_DebugLinkFlashErase":   113,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0}
}

//*
// Request: Reset device to default state and ask for device details
// @next Features
type Initialize struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Initialize) Reset()         { *m = Initialize{} }
func (m *Initialize) String() string { return proto.CompactTextString(m) }
func (*Initialize) ProtoMessage()    {}
func (*Initialize) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0}
}

func (m *Initialize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Initialize.Unmarshal(m, b)
}
func (m *Initialize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Initialize.Marshal(b, m, deterministic)
}
func (m *Initialize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Initialize.Merge(m, src)
}
func (m *Initialize) XXX_Size() int {
	return xxx_messageInfo_Initialize.Size(m)
}
func (m *Initialize) XXX_DiscardUnknown() {
	xxx_messageInfo_Initialize.DiscardUnknown(m)
}

var xxx_messageInfo_Initialize proto.InternalMessageInfo

//*
// Request: Ask for device details (no device reset)
// @next Features
type GetFeatures struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeatures) Reset()         { *m = GetFeatures{} }
func (m *GetFeatures) String() string { return proto.CompactTextString(m) }
func (*GetFeatures) ProtoMessage()    {}
func (*GetFeatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{1}
}

func (m *GetFeatures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeatures.Unmarshal(m, b)
}
func (m *GetFeatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeatures.Marshal(b, m, deterministic)
}
func (m *GetFeatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeatures.Merge(m, src)
}
func (m *GetFeatures) XXX_Size() int {
	return xxx_messageInfo_GetFeatures.Size(m)
}
func (m *GetFeatures) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeatures.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeatures proto.InternalMessageInfo

//*
// Response: Reports various information about the device
// @prev Initialize
// @prev GetFeatures
type Features struct {
	Vendor               string      `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	MajorVersion         uint32      `protobuf:"varint,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion         uint32      `protobuf:"varint,3,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	PatchVersion         uint32      `protobuf:"varint,4,opt,name=patch_version,json=patchVersion,proto3" json:"patch_version,omitempty"`
	BootloaderMode       bool        `protobuf:"varint,5,opt,name=bootloader_mode,json=bootloaderMode,proto3" json:"bootloader_mode,omitempty"`
	DeviceId             string      `protobuf:"bytes,6,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	PinProtection        bool        `protobuf:"varint,7,opt,name=pin_protection,json=pinProtection,proto3" json:"pin_protection,omitempty"`
	PassphraseProtection bool        `protobuf:"varint,8,opt,name=passphrase_protection,json=passphraseProtection,proto3" json:"passphrase_protection,omitempty"`
	Language             string      `protobuf:"bytes,9,opt,name=language,proto3" json:"language,omitempty"`
	Label                string      `protobuf:"bytes,10,opt,name=label,proto3" json:"label,omitempty"`
	Coins                []*CoinType `protobuf:"bytes,11,rep,name=coins,proto3" json:"coins,omitempty"`
	Initialized          bool        `protobuf:"varint,12,opt,name=initialized,proto3" json:"initialized,omitempty"`
	Revision             []byte      `protobuf:"bytes,13,opt,name=revision,proto3" json:"revision,omitempty"`
	BootloaderHash       []byte      `protobuf:"bytes,14,opt,name=bootloader_hash,json=bootloaderHash,proto3" json:"bootloader_hash,omitempty"`
	Imported             bool        `protobuf:"varint,15,opt,name=imported,proto3" json:"imported,omitempty"`
	PinCached            bool        `protobuf:"varint,16,opt,name=pin_cached,json=pinCached,proto3" json:"pin_cached,omitempty"`
	PassphraseCached     bool        `protobuf:"varint,17,opt,name=passphrase_cached,json=passphraseCached,proto3" json:"passphrase_cached,omitempty"`
	FirmwarePresent      bool        `protobuf:"varint,18,opt,name=firmware_present,json=firmwarePresent,proto3" json:"firmware_present,omitempty"`
	NeedsBackup          bool        `protobuf:"varint,19,opt,name=needs_backup,json=needsBackup,proto3" json:"needs_backup,omitempty"`
	Flags                uint32      `protobuf:"varint,20,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Features) Reset()         { *m = Features{} }
func (m *Features) String() string { return proto.CompactTextString(m) }
func (*Features) ProtoMessage()    {}
func (*Features) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{2}
}

func (m *Features) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Features.Unmarshal(m, b)
}
func (m *Features) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Features.Marshal(b, m, deterministic)
}
func (m *Features) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Features.Merge(m, src)
}
func (m *Features) XXX_Size() int {
	return xxx_messageInfo_Features.Size(m)
}
func (m *Features) XXX_DiscardUnknown() {
	xxx_messageInfo_Features.DiscardUnknown(m)
}

var xxx_messageInfo_Features proto.InternalMessageInfo

func (m *Features) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *Features) GetMajorVersion() uint32 {
	if m != nil {
		return m.MajorVersion
	}
	return 0
}

func (m *Features) GetMinorVersion() uint32 {
	if m != nil {
		return m.MinorVersion
	}
	return 0
}

func (m *Features) GetPatchVersion() uint32 {
	if m != nil {
		return m.PatchVersion
	}
	return 0
}

func (m *Features) GetBootloaderMode() bool {
	if m != nil {
		return m.BootloaderMode
	}
	return false
}

func (m *Features) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Features) GetPinProtection() bool {
	if m != nil {
		return m.PinProtection
	}
	return false
}

func (m *Features) GetPassphraseProtection() bool {
	if m != nil {
		return m.PassphraseProtection
	}
	return false
}

func (m *Features) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Features) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Features) GetCoins() []*CoinType {
	if m != nil {
		return m.Coins
	}
	return nil
}

func (m *Features) GetInitialized() bool {
	if m != nil {
		return m.Initialized
	}
	return false
}

func (m *Features) GetRevision() []byte {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *Features) GetBootloaderHash() []byte {
	if m != nil {
		return m.BootloaderHash
	}
	return nil
}

func (m *Features) GetImported() bool {
	if m != nil {
		return m.Imported
	}
	return false
}

func (m *Features) GetPinCached() bool {
	if m != nil {
		return m.PinCached
	}
	return false
}

func (m *Features) GetPassphraseCached() bool {
	if m != nil {
		return m.PassphraseCached
	}
	return false
}

func (m *Features) GetFirmwarePresent() bool {
	if m != nil {
		return m.FirmwarePresent
	}
	return false
}

func (m *Features) GetNeedsBackup() bool {
	if m != nil {
		return m.NeedsBackup
	}
	return false
}

func (m *Features) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

//*
// Request: clear session (removes cached PIN, passphrase, etc).
// @next Success
type ClearSession struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearSession) Reset()         { *m = ClearSession{} }
func (m *ClearSession) String() string { return proto.CompactTextString(m) }
func (*ClearSession) ProtoMessage()    {}
func (*ClearSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{3}
}

func (m *ClearSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearSession.Unmarshal(m, b)
}
func (m *ClearSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearSession.Marshal(b, m, deterministic)
}
func (m *ClearSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearSession.Merge(m, src)
}
func (m *ClearSession) XXX_Size() int {
	return xxx_messageInfo_ClearSession.Size(m)
}
func (m *ClearSession) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearSession.DiscardUnknown(m)
}

var xxx_messageInfo_ClearSession proto.InternalMessageInfo

//*
// Request: change language and/or label of the device
// @next Success
// @next Failure
// @next ButtonRequest
// @next PinMatrixRequest
type ApplySettings struct {
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Label                string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	UsePassphrase        bool     `protobuf:"varint,3,opt,name=use_passphrase,json=usePassphrase,proto3" json:"use_passphrase,omitempty"`
	Homescreen           []byte   `protobuf:"bytes,4,opt,name=homescreen,proto3" json:"homescreen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplySettings) Reset()         { *m = ApplySettings{} }
func (m *ApplySettings) String() string { return proto.CompactTextString(m) }
func (*ApplySettings) ProtoMessage()    {}
func (*ApplySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{4}
}

func (m *ApplySettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplySettings.Unmarshal(m, b)
}
func (m *ApplySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplySettings.Marshal(b, m, deterministic)
}
func (m *ApplySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplySettings.Merge(m, src)
}
func (m *ApplySettings) XXX_Size() int {
	return xxx_messageInfo_ApplySettings.Size(m)
}
func (m *ApplySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplySettings.DiscardUnknown(m)
}

var xxx_messageInfo_ApplySettings proto.InternalMessageInfo

func (m *ApplySettings) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *ApplySettings) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ApplySettings) GetUsePassphrase() bool {
	if m != nil {
		return m.UsePassphrase
	}
	return false
}

func (m *ApplySettings) GetHomescreen() []byte {
	if m != nil {
		return m.Homescreen
	}
	return nil
}

//*
// Request: set flags of the device
// @next Success
// @next Failure
type ApplyFlags struct {
	Flags                uint32   `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyFlags) Reset()         { *m = ApplyFlags{} }
func (m *ApplyFlags) String() string { return proto.CompactTextString(m) }
func (*ApplyFlags) ProtoMessage()    {}
func (*ApplyFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{5}
}

func (m *ApplyFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyFlags.Unmarshal(m, b)
}
func (m *ApplyFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyFlags.Marshal(b, m, deterministic)
}
func (m *ApplyFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyFlags.Merge(m, src)
}
func (m *ApplyFlags) XXX_Size() int {
	return xxx_messageInfo_ApplyFlags.Size(m)
}
func (m *ApplyFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyFlags.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyFlags proto.InternalMessageInfo

func (m *ApplyFlags) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

//*
// Request: Starts workflow for setting/changing/removing the PIN
// @next ButtonRequest
// @next PinMatrixRequest
type ChangePin struct {
	Remove               bool     `protobuf:"varint,1,opt,name=remove,proto3" json:"remove,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePin) Reset()         { *m = ChangePin{} }
func (m *ChangePin) String() string { return proto.CompactTextString(m) }
func (*ChangePin) ProtoMessage()    {}
func (*ChangePin) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{6}
}

func (m *ChangePin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePin.Unmarshal(m, b)
}
func (m *ChangePin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePin.Marshal(b, m, deterministic)
}
func (m *ChangePin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePin.Merge(m, src)
}
func (m *ChangePin) XXX_Size() int {
	return xxx_messageInfo_ChangePin.Size(m)
}
func (m *ChangePin) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePin.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePin proto.InternalMessageInfo

func (m *ChangePin) GetRemove() bool {
	if m != nil {
		return m.Remove
	}
	return false
}

//*
// Request: Test if the device is alive, device sends back the message in Success response
// @next Success
type Ping struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ButtonProtection     bool     `protobuf:"varint,2,opt,name=button_protection,json=buttonProtection,proto3" json:"button_protection,omitempty"`
	PinProtection        bool     `protobuf:"varint,3,opt,name=pin_protection,json=pinProtection,proto3" json:"pin_protection,omitempty"`
	PassphraseProtection bool     `protobuf:"varint,4,opt,name=passphrase_protection,json=passphraseProtection,proto3" json:"passphrase_protection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{7}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Ping) GetButtonProtection() bool {
	if m != nil {
		return m.ButtonProtection
	}
	return false
}

func (m *Ping) GetPinProtection() bool {
	if m != nil {
		return m.PinProtection
	}
	return false
}

func (m *Ping) GetPassphraseProtection() bool {
	if m != nil {
		return m.PassphraseProtection
	}
	return false
}

//*
// Response: Success of the previous request
type Success struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Success) Reset()         { *m = Success{} }
func (m *Success) String() string { return proto.CompactTextString(m) }
func (*Success) ProtoMessage()    {}
func (*Success) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{8}
}

func (m *Success) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Success.Unmarshal(m, b)
}
func (m *Success) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Success.Marshal(b, m, deterministic)
}
func (m *Success) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Success.Merge(m, src)
}
func (m *Success) XXX_Size() int {
	return xxx_messageInfo_Success.Size(m)
}
func (m *Success) XXX_DiscardUnknown() {
	xxx_messageInfo_Success.DiscardUnknown(m)
}

var xxx_messageInfo_Success proto.InternalMessageInfo

func (m *Success) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//*
// Response: Failure of the previous request
type Failure struct {
	Code                 FailureType `protobuf:"varint,1,opt,name=code,proto3,enum=trezor.FailureType" json:"code,omitempty"`
	Message              string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Failure) Reset()         { *m = Failure{} }
func (m *Failure) String() string { return proto.CompactTextString(m) }
func (*Failure) ProtoMessage()    {}
func (*Failure) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{9}
}

func (m *Failure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Failure.Unmarshal(m, b)
}
func (m *Failure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Failure.Marshal(b, m, deterministic)
}
func (m *Failure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Failure.Merge(m, src)
}
func (m *Failure) XXX_Size() int {
	return xxx_messageInfo_Failure.Size(m)
}
func (m *Failure) XXX_DiscardUnknown() {
	xxx_messageInfo_Failure.DiscardUnknown(m)
}

var xxx_messageInfo_Failure proto.InternalMessageInfo

func (m *Failure) GetCode() FailureType {
	if m != nil {
		return m.Code
	}
	return FailureType_Failure_UnexpectedMessage
}

func (m *Failure) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//*
// Response: Device is waiting for HW button press.
// @next ButtonAck
// @next Cancel
type ButtonRequest struct {
	Code                 ButtonRequestType `protobuf:"varint,1,opt,name=code,proto3,enum=trezor.ButtonRequestType" json:"code,omitempty"`
	Data                 string            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ButtonRequest) Reset()         { *m = ButtonRequest{} }
func (m *ButtonRequest) String() string { return proto.CompactTextString(m) }
func (*ButtonRequest) ProtoMessage()    {}
func (*ButtonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{10}
}

func (m *ButtonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ButtonRequest.Unmarshal(m, b)
}
func (m *ButtonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ButtonRequest.Marshal(b, m, deterministic)
}
func (m *ButtonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ButtonRequest.Merge(m, src)
}
func (m *ButtonRequest) XXX_Size() int {
	return xxx_messageInfo_ButtonRequest.Size(m)
}
func (m *ButtonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ButtonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ButtonRequest proto.InternalMessageInfo

func (m *ButtonRequest) GetCode() ButtonRequestType {
	if m != nil {
		return m.Code
	}
	return ButtonRequestType_ButtonRequest_Other
}

func (m *ButtonRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

//*
// Request: Computer agrees to wait for HW button press
// @prev ButtonRequest
type ButtonAck struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ButtonAck) Reset()         { *m = ButtonAck{} }
func (m *ButtonAck) String() string { return proto.CompactTextString(m) }
func (*ButtonAck) ProtoMessage()    {}
func (*ButtonAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{11}
}

func (m *ButtonAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ButtonAck.Unmarshal(m, b)
}
func (m *ButtonAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ButtonAck.Marshal(b, m, deterministic)
}
func (m *ButtonAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ButtonAck.Merge(m, src)
}
func (m *ButtonAck) XXX_Size() int {
	return xxx_messageInfo_ButtonAck.Size(m)
}
func (m *ButtonAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ButtonAck.DiscardUnknown(m)
}

var xxx_messageInfo_ButtonAck proto.InternalMessageInfo

//*
// Response: Device is asking computer to show PIN matrix and awaits PIN encoded using this matrix scheme
// @next PinMatrixAck
// @next Cancel
type PinMatrixRequest struct {
	Type                 PinMatrixRequestType `protobuf:"varint,1,opt,name=type,proto3,enum=trezor.PinMatrixRequestType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PinMatrixRequest) Reset()         { *m = PinMatrixRequest{} }
func (m *PinMatrixRequest) String() string { return proto.CompactTextString(m) }
func (*PinMatrixRequest) ProtoMessage()    {}
func (*PinMatrixRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{12}
}

func (m *PinMatrixRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PinMatrixRequest.Unmarshal(m, b)
}
func (m *PinMatrixRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PinMatrixRequest.Marshal(b, m, deterministic)
}
func (m *PinMatrixRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PinMatrixRequest.Merge(m, src)
}
func (m *PinMatrixRequest) XXX_Size() int {
	return xxx_messageInfo_PinMatrixRequest.Size(m)
}
func (m *PinMatrixRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PinMatrixRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PinMatrixRequest proto.InternalMessageInfo

func (m *PinMatrixRequest) GetType() PinMatrixRequestType {
	if m != nil {
		return m.Type
	}
	return PinMatrixRequestType_PinMatrixRequestType_Current
}

//*
// Request: Computer responds with encoded PIN
// @prev PinMatrixRequest
type PinMatrixAck struct {
	Pin                  string   `protobuf:"bytes,1,opt,name=pin,proto3" json:"pin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PinMatrixAck) Reset()         { *m = PinMatrixAck{} }
func (m *PinMatrixAck) String() string { return proto.CompactTextString(m) }
func (*PinMatrixAck) ProtoMessage()    {}
func (*PinMatrixAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{13}
}

func (m *PinMatrixAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PinMatrixAck.Unmarshal(m, b)
}
func (m *PinMatrixAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PinMatrixAck.Marshal(b, m, deterministic)
}
func (m *PinMatrixAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PinMatrixAck.Merge(m, src)
}
func (m *PinMatrixAck) XXX_Size() int {
	return xxx_messageInfo_PinMatrixAck.Size(m)
}
func (m *PinMatrixAck) XXX_DiscardUnknown() {
	xxx_messageInfo_PinMatrixAck.DiscardUnknown(m)
}

var xxx_messageInfo_PinMatrixAck proto.InternalMessageInfo

func (m *PinMatrixAck) GetPin() string {
	if m != nil {
		return m.Pin
	}
	return ""
}

//*
// Request: Abort last operation that user interaction
// @prev ButtonRequest
// @prev PinMatrixRequest
// @prev PassphraseRequest
type Cancel struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cancel) Reset()         { *m = Cancel{} }
func (m *Cancel) String() string { return proto.CompactTextString(m) }
func (*Cancel) ProtoMessage()    {}
func (*Cancel) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{14}
}

func (m *Cancel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cancel.Unmarshal(m, b)
}
func (m *Cancel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cancel.Marshal(b, m, deterministic)
}
func (m *Cancel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cancel.Merge(m, src)
}
func (m *Cancel) XXX_Size() int {
	return xxx_messageInfo_Cancel.Size(m)
}
func (m *Cancel) XXX_DiscardUnknown() {
	xxx_messageInfo_Cancel.DiscardUnknown(m)
}

var xxx_messageInfo_Cancel proto.InternalMessageInfo

//*
// Response: Device awaits encryption passphrase
// @next PassphraseAck
// @next Cancel
type PassphraseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PassphraseRequest) Reset()         { *m = PassphraseRequest{} }
func (m *PassphraseRequest) String() string { return proto.CompactTextString(m) }
func (*PassphraseRequest) ProtoMessage()    {}
func (*PassphraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{15}
}

func (m *PassphraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PassphraseRequest.Unmarshal(m, b)
}
func (m *PassphraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PassphraseRequest.Marshal(b, m, deterministic)
}
func (m *PassphraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PassphraseRequest.Merge(m, src)
}
func (m *PassphraseRequest) XXX_Size() int {
	return xxx_messageInfo_PassphraseRequest.Size(m)
}
func (m *PassphraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PassphraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PassphraseRequest proto.InternalMessageInfo

//*
// Request: Send passphrase back
// @prev PassphraseRequest
type PassphraseAck struct {
	Passphrase           string   `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PassphraseAck) Reset()         { *m = PassphraseAck{} }
func (m *PassphraseAck) String() string { return proto.CompactTextString(m) }
func (*PassphraseAck) ProtoMessage()    {}
func (*PassphraseAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{16}
}

func (m *PassphraseAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PassphraseAck.Unmarshal(m, b)
}
func (m *PassphraseAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PassphraseAck.Marshal(b, m, deterministic)
}
func (m *PassphraseAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PassphraseAck.Merge(m, src)
}
func (m *PassphraseAck) XXX_Size() int {
	return xxx_messageInfo_PassphraseAck.Size(m)
}
func (m *PassphraseAck) XXX_DiscardUnknown() {
	xxx_messageInfo_PassphraseAck.DiscardUnknown(m)
}

var xxx_messageInfo_PassphraseAck proto.InternalMessageInfo

func (m *PassphraseAck) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

//*
// Request: Request a sample of random data generated by hardware RNG. May be used for testing.
// @next ButtonRequest
// @next Entropy
// @next Failure
type GetEntropy struct {
	Size                 uint32   `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEntropy) Reset()         { *m = GetEntropy{} }
func (m *GetEntropy) String() string { return proto.CompactTextString(m) }
func (*GetEntropy) ProtoMessage()    {}
func (*GetEntropy) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{17}
}

func (m *GetEntropy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEntropy.Unmarshal(m, b)
}
func (m *GetEntropy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEntropy.Marshal(b, m, deterministic)
}
func (m *GetEntropy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEntropy.Merge(m, src)
}
func (m *GetEntropy) XXX_Size() int {
	return xxx_messageInfo_GetEntropy.Size(m)
}
func (m *GetEntropy) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEntropy.DiscardUnknown(m)
}

var xxx_messageInfo_GetEntropy proto.InternalMessageInfo

func (m *GetEntropy) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

//*
// Response: Reply with random data generated by internal RNG
// @prev GetEntropy
type Entropy struct {
	Entropy              []byte   `protobuf:"bytes,1,opt,name=entropy,proto3" json:"entropy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entropy) Reset()         { *m = Entropy{} }
func (m *Entropy) String() string { return proto.CompactTextString(m) }
func (*Entropy) ProtoMessage()    {}
func (*Entropy) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{18}
}

func (m *Entropy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entropy.Unmarshal(m, b)
}
func (m *Entropy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entropy.Marshal(b, m, deterministic)
}
func (m *Entropy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entropy.Merge(m, src)
}
func (m *Entropy) XXX_Size() int {
	return xxx_messageInfo_Entropy.Size(m)
}
func (m *Entropy) XXX_DiscardUnknown() {
	xxx_messageInfo_Entropy.DiscardUnknown(m)
}

var xxx_messageInfo_Entropy proto.InternalMessageInfo

func (m *Entropy) GetEntropy() []byte {
	if m != nil {
		return m.Entropy
	}
	return nil
}

//*
// Request: Ask device for public key corresponding to address_n path
// @next PassphraseRequest
// @next PublicKey
// @next Failure
type GetPublicKey struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,packed,name=address_n,json=addressN,proto3" json:"address_n,omitempty"`
	EcdsaCurveName       string   `protobuf:"bytes,2,opt,name=ecdsa_curve_name,json=ecdsaCurveName,proto3" json:"ecdsa_curve_name,omitempty"`
	ShowDisplay          bool     `protobuf:"varint,3,opt,name=show_display,json=showDisplay,proto3" json:"show_display,omitempty"`
	CoinName             string   `protobuf:"bytes,4,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPublicKey) Reset()         { *m = GetPublicKey{} }
func (m *GetPublicKey) String() string { return proto.CompactTextString(m) }
func (*GetPublicKey) ProtoMessage()    {}
func (*GetPublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{19}
}

func (m *GetPublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPublicKey.Unmarshal(m, b)
}
func (m *GetPublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPublicKey.Marshal(b, m, deterministic)
}
func (m *GetPublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPublicKey.Merge(m, src)
}
func (m *GetPublicKey) XXX_Size() int {
	return xxx_messageInfo_GetPublicKey.Size(m)
}
func (m *GetPublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_GetPublicKey proto.InternalMessageInfo

func (m *GetPublicKey) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *GetPublicKey) GetEcdsaCurveName() string {
	if m != nil {
		return m.EcdsaCurveName
	}
	return ""
}

func (m *GetPublicKey) GetShowDisplay() bool {
	if m != nil {
		return m.ShowDisplay
	}
	return false
}

func (m *GetPublicKey) GetCoinName() string {
	if m != nil {
		return m.CoinName
	}
	return ""
}

//*
// Response: Contains public key derived from device private seed
// @prev GetPublicKey
type PublicKey struct {
	Node                 *HDNodeType `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Xpub                 string      `protobuf:"bytes,2,opt,name=xpub,proto3" json:"xpub,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{20}
}

func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (m *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(m, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetNode() *HDNodeType {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *PublicKey) GetXpub() string {
	if m != nil {
		return m.Xpub
	}
	return ""
}

//*
// Request: Ask device for address corresponding to address_n path
// @next PassphraseRequest
// @next Address
// @next Failure
type GetAddress struct {
	AddressN             []uint32                  `protobuf:"varint,1,rep,packed,name=address_n,json=addressN,proto3" json:"address_n,omitempty"`
	CoinName             string                    `protobuf:"bytes,2,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	ShowDisplay          bool                      `protobuf:"varint,3,opt,name=show_display,json=showDisplay,proto3" json:"show_display,omitempty"`
	Multisig             *MultisigRedeemScriptType `protobuf:"bytes,4,opt,name=multisig,proto3" json:"multisig,omitempty"`
	ScriptType           InputScriptType           `protobuf:"varint,5,opt,name=script_type,json=scriptType,proto3,enum=trezor.InputScriptType" json:"script_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetAddress) Reset()         { *m = GetAddress{} }
func (m *GetAddress) String() string { return proto.CompactTextString(m) }
func (*GetAddress) ProtoMessage()    {}
func (*GetAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{21}
}

func (m *GetAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddress.Unmarshal(m, b)
}
func (m *GetAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddress.Marshal(b, m, deterministic)
}
func (m *GetAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddress.Merge(m, src)
}
func (m *GetAddress) XXX_Size() int {
	return xxx_messageInfo_GetAddress.Size(m)
}
func (m *GetAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddress.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddress proto.InternalMessageInfo

func (m *GetAddress) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *GetAddress) GetCoinName() string {
	if m != nil {
		return m.CoinName
	}
	return ""
}

func (m *GetAddress) GetShowDisplay() bool {
	if m != nil {
		return m.ShowDisplay
	}
	return false
}

func (m *GetAddress) GetMultisig() *MultisigRedeemScriptType {
	if m != nil {
		return m.Multisig
	}
	return nil
}

func (m *GetAddress) GetScriptType() InputScriptType {
	if m != nil {
		return m.ScriptType
	}
	return InputScriptType_SPENDADDRESS
}

//*
// Request: Ask device for Theta address corresponding to address_n path
// @next PassphraseRequest
// @next ThetaAddress
// @next Failure
type ThetaGetAddress struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,packed,name=address_n,json=addressN,proto3" json:"address_n,omitempty"`
	ShowDisplay          bool     `protobuf:"varint,2,opt,name=show_display,json=showDisplay,proto3" json:"show_display,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThetaGetAddress) Reset()         { *m = ThetaGetAddress{} }
func (m *ThetaGetAddress) String() string { return proto.CompactTextString(m) }
func (*ThetaGetAddress) ProtoMessage()    {}
func (*ThetaGetAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{22}
}

func (m *ThetaGetAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThetaGetAddress.Unmarshal(m, b)
}
func (m *ThetaGetAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThetaGetAddress.Marshal(b, m, deterministic)
}
func (m *ThetaGetAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThetaGetAddress.Merge(m, src)
}
func (m *ThetaGetAddress) XXX_Size() int {
	return xxx_messageInfo_ThetaGetAddress.Size(m)
}
func (m *ThetaGetAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_ThetaGetAddress.DiscardUnknown(m)
}

var xxx_messageInfo_ThetaGetAddress proto.InternalMessageInfo

func (m *ThetaGetAddress) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *ThetaGetAddress) GetShowDisplay() bool {
	if m != nil {
		return m.ShowDisplay
	}
	return false
}

//*
// Response: Contains address derived from device private seed
// @prev GetAddress
type Address struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{23}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

//*
// Response: Contains an Theta address derived from device private seed
// @prev ThetaGetAddress
type ThetaAddress struct {
	Address              []byte   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThetaAddress) Reset()         { *m = ThetaAddress{} }
func (m *ThetaAddress) String() string { return proto.CompactTextString(m) }
func (*ThetaAddress) ProtoMessage()    {}
func (*ThetaAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{24}
}

func (m *ThetaAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThetaAddress.Unmarshal(m, b)
}
func (m *ThetaAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThetaAddress.Marshal(b, m, deterministic)
}
func (m *ThetaAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThetaAddress.Merge(m, src)
}
func (m *ThetaAddress) XXX_Size() int {
	return xxx_messageInfo_ThetaAddress.Size(m)
}
func (m *ThetaAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_ThetaAddress.DiscardUnknown(m)
}

var xxx_messageInfo_ThetaAddress proto.InternalMessageInfo

func (m *ThetaAddress) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

//*
// Request: Request device to wipe all sensitive data and settings
// @next ButtonRequest
type WipeDevice struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WipeDevice) Reset()         { *m = WipeDevice{} }
func (m *WipeDevice) String() string { return proto.CompactTextString(m) }
func (*WipeDevice) ProtoMessage()    {}
func (*WipeDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{25}
}

func (m *WipeDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WipeDevice.Unmarshal(m, b)
}
func (m *WipeDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WipeDevice.Marshal(b, m, deterministic)
}
func (m *WipeDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WipeDevice.Merge(m, src)
}
func (m *WipeDevice) XXX_Size() int {
	return xxx_messageInfo_WipeDevice.Size(m)
}
func (m *WipeDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_WipeDevice.DiscardUnknown(m)
}

var xxx_messageInfo_WipeDevice proto.InternalMessageInfo

//*
// Request: Load seed and related internal settings from the computer
// @next ButtonRequest
// @next Success
// @next Failure
type LoadDevice struct {
	Mnemonic             string      `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	Node                 *HDNodeType `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Pin                  string      `protobuf:"bytes,3,opt,name=pin,proto3" json:"pin,omitempty"`
	PassphraseProtection bool        `protobuf:"varint,4,opt,name=passphrase_protection,json=passphraseProtection,proto3" json:"passphrase_protection,omitempty"`
	Language             string      `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	Label                string      `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	SkipChecksum         bool        `protobuf:"varint,7,opt,name=skip_checksum,json=skipChecksum,proto3" json:"skip_checksum,omitempty"`
	U2FCounter           uint32      `protobuf:"varint,8,opt,name=u2f_counter,json=u2fCounter,proto3" json:"u2f_counter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LoadDevice) Reset()         { *m = LoadDevice{} }
func (m *LoadDevice) String() string { return proto.CompactTextString(m) }
func (*LoadDevice) ProtoMessage()    {}
func (*LoadDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{26}
}

func (m *LoadDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadDevice.Unmarshal(m, b)
}
func (m *LoadDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadDevice.Marshal(b, m, deterministic)
}
func (m *LoadDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadDevice.Merge(m, src)
}
func (m *LoadDevice) XXX_Size() int {
	return xxx_messageInfo_LoadDevice.Size(m)
}
func (m *LoadDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadDevice.DiscardUnknown(m)
}

var xxx_messageInfo_LoadDevice proto.InternalMessageInfo

func (m *LoadDevice) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

func (m *LoadDevice) GetNode() *HDNodeType {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *LoadDevice) GetPin() string {
	if m != nil {
		return m.Pin
	}
	return ""
}

func (m *LoadDevice) GetPassphraseProtection() bool {
	if m != nil {
		return m.PassphraseProtection
	}
	return false
}

func (m *LoadDevice) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *LoadDevice) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *LoadDevice) GetSkipChecksum() bool {
	if m != nil {
		return m.SkipChecksum
	}
	return false
}

func (m *LoadDevice) GetU2FCounter() uint32 {
	if m != nil {
		return m.U2FCounter
	}
	return 0
}

//*
// Request: Ask device to do initialization involving user interaction
// @next EntropyRequest
// @next Failure
type ResetDevice struct {
	DisplayRandom        bool     `protobuf:"varint,1,opt,name=display_random,json=displayRandom,proto3" json:"display_random,omitempty"`
	Strength             uint32   `protobuf:"varint,2,opt,name=strength,proto3" json:"strength,omitempty"`
	PassphraseProtection bool     `protobuf:"varint,3,opt,name=passphrase_protection,json=passphraseProtection,proto3" json:"passphrase_protection,omitempty"`
	PinProtection        bool     `protobuf:"varint,4,opt,name=pin_protection,json=pinProtection,proto3" json:"pin_protection,omitempty"`
	Language             string   `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	Label                string   `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	U2FCounter           uint32   `protobuf:"varint,7,opt,name=u2f_counter,json=u2fCounter,proto3" json:"u2f_counter,omitempty"`
	SkipBackup           bool     `protobuf:"varint,8,opt,name=skip_backup,json=skipBackup,proto3" json:"skip_backup,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetDevice) Reset()         { *m = ResetDevice{} }
func (m *ResetDevice) String() string { return proto.CompactTextString(m) }
func (*ResetDevice) ProtoMessage()    {}
func (*ResetDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{27}
}

func (m *ResetDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetDevice.Unmarshal(m, b)
}
func (m *ResetDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetDevice.Marshal(b, m, deterministic)
}
func (m *ResetDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetDevice.Merge(m, src)
}
func (m *ResetDevice) XXX_Size() int {
	return xxx_messageInfo_ResetDevice.Size(m)
}
func (m *ResetDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetDevice.DiscardUnknown(m)
}

var xxx_messageInfo_ResetDevice proto.InternalMessageInfo

func (m *ResetDevice) GetDisplayRandom() bool {
	if m != nil {
		return m.DisplayRandom
	}
	return false
}

func (m *ResetDevice) GetStrength() uint32 {
	if m != nil {
		return m.Strength
	}
	return 0
}

func (m *ResetDevice) GetPassphraseProtection() bool {
	if m != nil {
		return m.PassphraseProtection
	}
	return false
}

func (m *ResetDevice) GetPinProtection() bool {
	if m != nil {
		return m.PinProtection
	}
	return false
}

func (m *ResetDevice) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *ResetDevice) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ResetDevice) GetU2FCounter() uint32 {
	if m != nil {
		return m.U2FCounter
	}
	return 0
}

func (m *ResetDevice) GetSkipBackup() bool {
	if m != nil {
		return m.SkipBackup
	}
	return false
}

//*
// Request: Perform backup of the device seed if not backed up using ResetDevice
// @next ButtonRequest
type BackupDevice struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupDevice) Reset()         { *m = BackupDevice{} }
func (m *BackupDevice) String() string { return proto.CompactTextString(m) }
func (*BackupDevice) ProtoMessage()    {}
func (*BackupDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{28}
}

func (m *BackupDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupDevice.Unmarshal(m, b)
}
func (m *BackupDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupDevice.Marshal(b, m, deterministic)
}
func (m *BackupDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupDevice.Merge(m, src)
}
func (m *BackupDevice) XXX_Size() int {
	return xxx_messageInfo_BackupDevice.Size(m)
}
func (m *BackupDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupDevice.DiscardUnknown(m)
}

var xxx_messageInfo_BackupDevice proto.InternalMessageInfo

//*
// Response: Ask for additional entropy from host computer
// @prev ResetDevice
// @next EntropyAck
type EntropyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntropyRequest) Reset()         { *m = EntropyRequest{} }
func (m *EntropyRequest) String() string { return proto.CompactTextString(m) }
func (*EntropyRequest) ProtoMessage()    {}
func (*EntropyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{29}
}

func (m *EntropyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntropyRequest.Unmarshal(m, b)
}
func (m *EntropyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntropyRequest.Marshal(b, m, deterministic)
}
func (m *EntropyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntropyRequest.Merge(m, src)
}
func (m *EntropyRequest) XXX_Size() int {
	return xxx_messageInfo_EntropyRequest.Size(m)
}
func (m *EntropyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntropyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntropyRequest proto.InternalMessageInfo

//*
// Request: Provide additional entropy for seed generation function
// @prev EntropyRequest
// @next ButtonRequest
type EntropyAck struct {
	Entropy              []byte   `protobuf:"bytes,1,opt,name=entropy,proto3" json:"entropy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntropyAck) Reset()         { *m = EntropyAck{} }
func (m *EntropyAck) String() string { return proto.CompactTextString(m) }
func (*EntropyAck) ProtoMessage()    {}
func (*EntropyAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{30}
}

func (m *EntropyAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntropyAck.Unmarshal(m, b)
}
func (m *EntropyAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntropyAck.Marshal(b, m, deterministic)
}
func (m *EntropyAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntropyAck.Merge(m, src)
}
func (m *EntropyAck) XXX_Size() int {
	return xxx_messageInfo_EntropyAck.Size(m)
}
func (m *EntropyAck) XXX_DiscardUnknown() {
	xxx_messageInfo_EntropyAck.DiscardUnknown(m)
}

var xxx_messageInfo_EntropyAck proto.InternalMessageInfo

func (m *EntropyAck) GetEntropy() []byte {
	if m != nil {
		return m.Entropy
	}
	return nil
}

//*
// Request: Start recovery workflow asking user for specific words of mnemonic
// Used to recovery device safely even on untrusted computer.
// @next WordRequest
type RecoveryDevice struct {
	WordCount            uint32 `protobuf:"varint,1,opt,name=word_count,json=wordCount,proto3" json:"word_count,omitempty"`
	PassphraseProtection bool   `protobuf:"varint,2,opt,name=passphrase_protection,json=passphraseProtection,proto3" json:"passphrase_protection,omitempty"`
	PinProtection        bool   `protobuf:"varint,3,opt,name=pin_protection,json=pinProtection,proto3" json:"pin_protection,omitempty"`
	Language             string `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Label                string `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	EnforceWordlist      bool   `protobuf:"varint,6,opt,name=enforce_wordlist,json=enforceWordlist,proto3" json:"enforce_wordlist,omitempty"`
	// 7 reserved for unused recovery method
	Type                 uint32   `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	U2FCounter           uint32   `protobuf:"varint,9,opt,name=u2f_counter,json=u2fCounter,proto3" json:"u2f_counter,omitempty"`
	DryRun               bool     `protobuf:"varint,10,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecoveryDevice) Reset()         { *m = RecoveryDevice{} }
func (m *RecoveryDevice) String() string { return proto.CompactTextString(m) }
func (*RecoveryDevice) ProtoMessage()    {}
func (*RecoveryDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{31}
}

func (m *RecoveryDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecoveryDevice.Unmarshal(m, b)
}
func (m *RecoveryDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecoveryDevice.Marshal(b, m, deterministic)
}
func (m *RecoveryDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecoveryDevice.Merge(m, src)
}
func (m *RecoveryDevice) XXX_Size() int {
	return xxx_messageInfo_RecoveryDevice.Size(m)
}
func (m *RecoveryDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_RecoveryDevice.DiscardUnknown(m)
}

var xxx_messageInfo_RecoveryDevice proto.InternalMessageInfo

func (m *RecoveryDevice) GetWordCount() uint32 {
	if m != nil {
		return m.WordCount
	}
	return 0
}

func (m *RecoveryDevice) GetPassphraseProtection() bool {
	if m != nil {
		return m.PassphraseProtection
	}
	return false
}

func (m *RecoveryDevice) GetPinProtection() bool {
	if m != nil {
		return m.PinProtection
	}
	return false
}

func (m *RecoveryDevice) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *RecoveryDevice) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *RecoveryDevice) GetEnforceWordlist() bool {
	if m != nil {
		return m.EnforceWordlist
	}
	return false
}

func (m *RecoveryDevice) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *RecoveryDevice) GetU2FCounter() uint32 {
	if m != nil {
		return m.U2FCounter
	}
	return 0
}

func (m *RecoveryDevice) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

//*
// Response: Device is waiting for user to enter word of the mnemonic
// Its position is shown only on device's internal display.
// @prev RecoveryDevice
// @prev WordAck
type WordRequest struct {
	Type                 WordRequestType `protobuf:"varint,1,opt,name=type,proto3,enum=trezor.WordRequestType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WordRequest) Reset()         { *m = WordRequest{} }
func (m *WordRequest) String() string { return proto.CompactTextString(m) }
func (*WordRequest) ProtoMessage()    {}
func (*WordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{32}
}

func (m *WordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordRequest.Unmarshal(m, b)
}
func (m *WordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordRequest.Marshal(b, m, deterministic)
}
func (m *WordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordRequest.Merge(m, src)
}
func (m *WordRequest) XXX_Size() int {
	return xxx_messageInfo_WordRequest.Size(m)
}
func (m *WordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WordRequest proto.InternalMessageInfo

func (m *WordRequest) GetType() WordRequestType {
	if m != nil {
		return m.Type
	}
	return WordRequestType_WordRequestType_Plain
}

//*
// Request: Computer replies with word from the mnemonic
// @prev WordRequest
// @next WordRequest
// @next Success
// @next Failure
type WordAck struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WordAck) Reset()         { *m = WordAck{} }
func (m *WordAck) String() string { return proto.CompactTextString(m) }
func (*WordAck) ProtoMessage()    {}
func (*WordAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{33}
}

func (m *WordAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordAck.Unmarshal(m, b)
}
func (m *WordAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordAck.Marshal(b, m, deterministic)
}
func (m *WordAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordAck.Merge(m, src)
}
func (m *WordAck) XXX_Size() int {
	return xxx_messageInfo_WordAck.Size(m)
}
func (m *WordAck) XXX_DiscardUnknown() {
	xxx_messageInfo_WordAck.DiscardUnknown(m)
}

var xxx_messageInfo_WordAck proto.InternalMessageInfo

func (m *WordAck) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

//*
// Request: Ask device to sign message
// @next MessageSignature
// @next Failure
type SignMessage struct {
	AddressN             []uint32        `protobuf:"varint,1,rep,packed,name=address_n,json=addressN,proto3" json:"address_n,omitempty"`
	Message              []byte          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CoinName             string          `protobuf:"bytes,3,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	ScriptType           InputScriptType `protobuf:"varint,4,opt,name=script_type,json=scriptType,proto3,enum=trezor.InputScriptType" json:"script_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SignMessage) Reset()         { *m = SignMessage{} }
func (m *SignMessage) String() string { return proto.CompactTextString(m) }
func (*SignMessage) ProtoMessage()    {}
func (*SignMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{34}
}

func (m *SignMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignMessage.Unmarshal(m, b)
}
func (m *SignMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignMessage.Marshal(b, m, deterministic)
}
func (m *SignMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignMessage.Merge(m, src)
}
func (m *SignMessage) XXX_Size() int {
	return xxx_messageInfo_SignMessage.Size(m)
}
func (m *SignMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SignMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SignMessage proto.InternalMessageInfo

func (m *SignMessage) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *SignMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SignMessage) GetCoinName() string {
	if m != nil {
		return m.CoinName
	}
	return ""
}

func (m *SignMessage) GetScriptType() InputScriptType {
	if m != nil {
		return m.ScriptType
	}
	return InputScriptType_SPENDADDRESS
}

//*
// Request: Ask device to verify message
// @next Success
// @next Failure
type VerifyMessage struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Message              []byte   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	CoinName             string   `protobuf:"bytes,4,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyMessage) Reset()         { *m = VerifyMessage{} }
func (m *VerifyMessage) String() string { return proto.CompactTextString(m) }
func (*VerifyMessage) ProtoMessage()    {}
func (*VerifyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{35}
}

func (m *VerifyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyMessage.Unmarshal(m, b)
}
func (m *VerifyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyMessage.Marshal(b, m, deterministic)
}
func (m *VerifyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyMessage.Merge(m, src)
}
func (m *VerifyMessage) XXX_Size() int {
	return xxx_messageInfo_VerifyMessage.Size(m)
}
func (m *VerifyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyMessage proto.InternalMessageInfo

func (m *VerifyMessage) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *VerifyMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *VerifyMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *VerifyMessage) GetCoinName() string {
	if m != nil {
		return m.CoinName
	}
	return ""
}

//*
// Response: Signed message
// @prev SignMessage
type MessageSignature struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageSignature) Reset()         { *m = MessageSignature{} }
func (m *MessageSignature) String() string { return proto.CompactTextString(m) }
func (*MessageSignature) ProtoMessage()    {}
func (*MessageSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{36}
}

func (m *MessageSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageSignature.Unmarshal(m, b)
}
func (m *MessageSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageSignature.Marshal(b, m, deterministic)
}
func (m *MessageSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageSignature.Merge(m, src)
}
func (m *MessageSignature) XXX_Size() int {
	return xxx_messageInfo_MessageSignature.Size(m)
}
func (m *MessageSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageSignature.DiscardUnknown(m)
}

var xxx_messageInfo_MessageSignature proto.InternalMessageInfo

func (m *MessageSignature) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MessageSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

//*
// Request: Ask device to encrypt message
// @next EncryptedMessage
// @next Failure
type EncryptMessage struct {
	Pubkey               []byte   `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Message              []byte   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DisplayOnly          bool     `protobuf:"varint,3,opt,name=display_only,json=displayOnly,proto3" json:"display_only,omitempty"`
	AddressN             []uint32 `protobuf:"varint,4,rep,packed,name=address_n,json=addressN,proto3" json:"address_n,omitempty"`
	CoinName             string   `protobuf:"bytes,5,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptMessage) Reset()         { *m = EncryptMessage{} }
func (m *EncryptMessage) String() string { return proto.CompactTextString(m) }
func (*EncryptMessage) ProtoMessage()    {}
func (*EncryptMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{37}
}

func (m *EncryptMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptMessage.Unmarshal(m, b)
}
func (m *EncryptMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptMessage.Marshal(b, m, deterministic)
}
func (m *EncryptMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptMessage.Merge(m, src)
}
func (m *EncryptMessage) XXX_Size() int {
	return xxx_messageInfo_EncryptMessage.Size(m)
}
func (m *EncryptMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptMessage proto.InternalMessageInfo

func (m *EncryptMessage) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *EncryptMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *EncryptMessage) GetDisplayOnly() bool {
	if m != nil {
		return m.DisplayOnly
	}
	return false
}

func (m *EncryptMessage) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *EncryptMessage) GetCoinName() string {
	if m != nil {
		return m.CoinName
	}
	return ""
}

//*
// Response: Encrypted message
// @prev EncryptMessage
type EncryptedMessage struct {
	Nonce                []byte   `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Message              []byte   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Hmac                 []byte   `protobuf:"bytes,3,opt,name=hmac,proto3" json:"hmac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptedMessage) Reset()         { *m = EncryptedMessage{} }
func (m *EncryptedMessage) String() string { return proto.CompactTextString(m) }
func (*EncryptedMessage) ProtoMessage()    {}
func (*EncryptedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{38}
}

func (m *EncryptedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptedMessage.Unmarshal(m, b)
}
func (m *EncryptedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptedMessage.Marshal(b, m, deterministic)
}
func (m *EncryptedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptedMessage.Merge(m, src)
}
func (m *EncryptedMessage) XXX_Size() int {
	return xxx_messageInfo_EncryptedMessage.Size(m)
}
func (m *EncryptedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptedMessage proto.InternalMessageInfo

func (m *EncryptedMessage) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *EncryptedMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *EncryptedMessage) GetHmac() []byte {
	if m != nil {
		return m.Hmac
	}
	return nil
}

//*
// Request: Ask device to decrypt message
// @next Success
// @next Failure
type DecryptMessage struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,packed,name=address_n,json=addressN,proto3" json:"address_n,omitempty"`
	Nonce                []byte   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Message              []byte   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Hmac                 []byte   `protobuf:"bytes,4,opt,name=hmac,proto3" json:"hmac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptMessage) Reset()         { *m = DecryptMessage{} }
func (m *DecryptMessage) String() string { return proto.CompactTextString(m) }
func (*DecryptMessage) ProtoMessage()    {}
func (*DecryptMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{39}
}

func (m *DecryptMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptMessage.Unmarshal(m, b)
}
func (m *DecryptMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptMessage.Marshal(b, m, deterministic)
}
func (m *DecryptMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptMessage.Merge(m, src)
}
func (m *DecryptMessage) XXX_Size() int {
	return xxx_messageInfo_DecryptMessage.Size(m)
}
func (m *DecryptMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptMessage proto.InternalMessageInfo

func (m *DecryptMessage) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *DecryptMessage) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *DecryptMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *DecryptMessage) GetHmac() []byte {
	if m != nil {
		return m.Hmac
	}
	return nil
}

//*
// Response: Decrypted message
// @prev DecryptedMessage
type DecryptedMessage struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptedMessage) Reset()         { *m = DecryptedMessage{} }
func (m *DecryptedMessage) String() string { return proto.CompactTextString(m) }
func (*DecryptedMessage) ProtoMessage()    {}
func (*DecryptedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{40}
}

func (m *DecryptedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptedMessage.Unmarshal(m, b)
}
func (m *DecryptedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptedMessage.Marshal(b, m, deterministic)
}
func (m *DecryptedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptedMessage.Merge(m, src)
}
func (m *DecryptedMessage) XXX_Size() int {
	return xxx_messageInfo_DecryptedMessage.Size(m)
}
func (m *DecryptedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptedMessage proto.InternalMessageInfo

func (m *DecryptedMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *DecryptedMessage) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

//*
// Request: Ask device to encrypt or decrypt value of given key
// @next CipheredKeyValue
// @next Failure
type CipherKeyValue struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,packed,name=address_n,json=addressN,proto3" json:"address_n,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Encrypt              bool     `protobuf:"varint,4,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	AskOnEncrypt         bool     `protobuf:"varint,5,opt,name=ask_on_encrypt,json=askOnEncrypt,proto3" json:"ask_on_encrypt,omitempty"`
	AskOnDecrypt         bool     `protobuf:"varint,6,opt,name=ask_on_decrypt,json=askOnDecrypt,proto3" json:"ask_on_decrypt,omitempty"`
	Iv                   []byte   `protobuf:"bytes,7,opt,name=iv,proto3" json:"iv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CipherKeyValue) Reset()         { *m = CipherKeyValue{} }
func (m *CipherKeyValue) String() string { return proto.CompactTextString(m) }
func (*CipherKeyValue) ProtoMessage()    {}
func (*CipherKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{41}
}

func (m *CipherKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipherKeyValue.Unmarshal(m, b)
}
func (m *CipherKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipherKeyValue.Marshal(b, m, deterministic)
}
func (m *CipherKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipherKeyValue.Merge(m, src)
}
func (m *CipherKeyValue) XXX_Size() int {
	return xxx_messageInfo_CipherKeyValue.Size(m)
}
func (m *CipherKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CipherKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_CipherKeyValue proto.InternalMessageInfo

func (m *CipherKeyValue) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *CipherKeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CipherKeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CipherKeyValue) GetEncrypt() bool {
	if m != nil {
		return m.Encrypt
	}
	return false
}

func (m *CipherKeyValue) GetAskOnEncrypt() bool {
	if m != nil {
		return m.AskOnEncrypt
	}
	return false
}

func (m *CipherKeyValue) GetAskOnDecrypt() bool {
	if m != nil {
		return m.AskOnDecrypt
	}
	return false
}

func (m *CipherKeyValue) GetIv() []byte {
	if m != nil {
		return m.Iv
	}
	return nil
}

//*
// Response: Return ciphered/deciphered value
// @prev CipherKeyValue
type CipheredKeyValue struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CipheredKeyValue) Reset()         { *m = CipheredKeyValue{} }
func (m *CipheredKeyValue) String() string { return proto.CompactTextString(m) }
func (*CipheredKeyValue) ProtoMessage()    {}
func (*CipheredKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{42}
}

func (m *CipheredKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipheredKeyValue.Unmarshal(m, b)
}
func (m *CipheredKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipheredKeyValue.Marshal(b, m, deterministic)
}
func (m *CipheredKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipheredKeyValue.Merge(m, src)
}
func (m *CipheredKeyValue) XXX_Size() int {
	return xxx_messageInfo_CipheredKeyValue.Size(m)
}
func (m *CipheredKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CipheredKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_CipheredKeyValue proto.InternalMessageInfo

func (m *CipheredKeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

//*
// Request: Estimated size of the transaction
// This behaves exactly like SignTx, which means that it can ask using TxRequest
// This call is non-blocking (except possible PassphraseRequest to unlock the seed)
// @next TxSize
// @next Failure
type EstimateTxSize struct {
	OutputsCount         uint32   `protobuf:"varint,1,opt,name=outputs_count,json=outputsCount,proto3" json:"outputs_count,omitempty"`
	InputsCount          uint32   `protobuf:"varint,2,opt,name=inputs_count,json=inputsCount,proto3" json:"inputs_count,omitempty"`
	CoinName             string   `protobuf:"bytes,3,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EstimateTxSize) Reset()         { *m = EstimateTxSize{} }
func (m *EstimateTxSize) String() string { return proto.CompactTextString(m) }
func (*EstimateTxSize) ProtoMessage()    {}
func (*EstimateTxSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{43}
}

func (m *EstimateTxSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateTxSize.Unmarshal(m, b)
}
func (m *EstimateTxSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateTxSize.Marshal(b, m, deterministic)
}
func (m *EstimateTxSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateTxSize.Merge(m, src)
}
func (m *EstimateTxSize) XXX_Size() int {
	return xxx_messageInfo_EstimateTxSize.Size(m)
}
func (m *EstimateTxSize) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateTxSize.DiscardUnknown(m)
}

var xxx_messageInfo_EstimateTxSize proto.InternalMessageInfo

func (m *EstimateTxSize) GetOutputsCount() uint32 {
	if m != nil {
		return m.OutputsCount
	}
	return 0
}

func (m *EstimateTxSize) GetInputsCount() uint32 {
	if m != nil {
		return m.InputsCount
	}
	return 0
}

func (m *EstimateTxSize) GetCoinName() string {
	if m != nil {
		return m.CoinName
	}
	return ""
}

//*
// Response: Estimated size of the transaction
// @prev EstimateTxSize
type TxSize struct {
	TxSize               uint32   `protobuf:"varint,1,opt,name=tx_size,json=txSize,proto3" json:"tx_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxSize) Reset()         { *m = TxSize{} }
func (m *TxSize) String() string { return proto.CompactTextString(m) }
func (*TxSize) ProtoMessage()    {}
func (*TxSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{44}
}

func (m *TxSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxSize.Unmarshal(m, b)
}
func (m *TxSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxSize.Marshal(b, m, deterministic)
}
func (m *TxSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxSize.Merge(m, src)
}
func (m *TxSize) XXX_Size() int {
	return xxx_messageInfo_TxSize.Size(m)
}
func (m *TxSize) XXX_DiscardUnknown() {
	xxx_messageInfo_TxSize.DiscardUnknown(m)
}

var xxx_messageInfo_TxSize proto.InternalMessageInfo

func (m *TxSize) GetTxSize() uint32 {
	if m != nil {
		return m.TxSize
	}
	return 0
}

//*
// Request: Ask device to sign transaction
// @next PassphraseRequest
// @next PinMatrixRequest
// @next TxRequest
// @next Failure
type SignTx struct {
	OutputsCount         uint32   `protobuf:"varint,1,opt,name=outputs_count,json=outputsCount,proto3" json:"outputs_count,omitempty"`
	InputsCount          uint32   `protobuf:"varint,2,opt,name=inputs_count,json=inputsCount,proto3" json:"inputs_count,omitempty"`
	CoinName             string   `protobuf:"bytes,3,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	Version              uint32   `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	LockTime             uint32   `protobuf:"varint,5,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTx) Reset()         { *m = SignTx{} }
func (m *SignTx) String() string { return proto.CompactTextString(m) }
func (*SignTx) ProtoMessage()    {}
func (*SignTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{45}
}

func (m *SignTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTx.Unmarshal(m, b)
}
func (m *SignTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTx.Marshal(b, m, deterministic)
}
func (m *SignTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTx.Merge(m, src)
}
func (m *SignTx) XXX_Size() int {
	return xxx_messageInfo_SignTx.Size(m)
}
func (m *SignTx) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTx.DiscardUnknown(m)
}

var xxx_messageInfo_SignTx proto.InternalMessageInfo

func (m *SignTx) GetOutputsCount() uint32 {
	if m != nil {
		return m.OutputsCount
	}
	return 0
}

func (m *SignTx) GetInputsCount() uint32 {
	if m != nil {
		return m.InputsCount
	}
	return 0
}

func (m *SignTx) GetCoinName() string {
	if m != nil {
		return m.CoinName
	}
	return ""
}

func (m *SignTx) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SignTx) GetLockTime() uint32 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

//*
// Request: Simplified transaction signing
// This method doesn't support streaming, so there are hardware limits in number of inputs and outputs.
// In case of success, the result is returned using TxRequest message.
// @next PassphraseRequest
// @next PinMatrixRequest
// @next TxRequest
// @next Failure
type SimpleSignTx struct {
	Inputs               []*TxInputType     `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []*TxOutputType    `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Transactions         []*TransactionType `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	CoinName             string             `protobuf:"bytes,4,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	Version              uint32             `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	LockTime             uint32             `protobuf:"varint,6,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SimpleSignTx) Reset()         { *m = SimpleSignTx{} }
func (m *SimpleSignTx) String() string { return proto.CompactTextString(m) }
func (*SimpleSignTx) ProtoMessage()    {}
func (*SimpleSignTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{46}
}

func (m *SimpleSignTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleSignTx.Unmarshal(m, b)
}
func (m *SimpleSignTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleSignTx.Marshal(b, m, deterministic)
}
func (m *SimpleSignTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleSignTx.Merge(m, src)
}
func (m *SimpleSignTx) XXX_Size() int {
	return xxx_messageInfo_SimpleSignTx.Size(m)
}
func (m *SimpleSignTx) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleSignTx.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleSignTx proto.InternalMessageInfo

func (m *SimpleSignTx) GetInputs() []*TxInputType {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *SimpleSignTx) GetOutputs() []*TxOutputType {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *SimpleSignTx) GetTransactions() []*TransactionType {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *SimpleSignTx) GetCoinName() string {
	if m != nil {
		return m.CoinName
	}
	return ""
}

func (m *SimpleSignTx) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SimpleSignTx) GetLockTime() uint32 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

//*
// Response: Device asks for information for signing transaction or returns the last result
// If request_index is set, device awaits TxAck message (with fields filled in according to request_type)
// If signature_index is set, 'signature' contains signed input of signature_index's input
// @prev SignTx
// @prev SimpleSignTx
// @prev TxAck
type TxRequest struct {
	RequestType          RequestType              `protobuf:"varint,1,opt,name=request_type,json=requestType,proto3,enum=trezor.RequestType" json:"request_type,omitempty"`
	Details              *TxRequestDetailsType    `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Serialized           *TxRequestSerializedType `protobuf:"bytes,3,opt,name=serialized,proto3" json:"serialized,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TxRequest) Reset()         { *m = TxRequest{} }
func (m *TxRequest) String() string { return proto.CompactTextString(m) }
func (*TxRequest) ProtoMessage()    {}
func (*TxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{47}
}

func (m *TxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRequest.Unmarshal(m, b)
}
func (m *TxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRequest.Marshal(b, m, deterministic)
}
func (m *TxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRequest.Merge(m, src)
}
func (m *TxRequest) XXX_Size() int {
	return xxx_messageInfo_TxRequest.Size(m)
}
func (m *TxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TxRequest proto.InternalMessageInfo

func (m *TxRequest) GetRequestType() RequestType {
	if m != nil {
		return m.RequestType
	}
	return RequestType_TXINPUT
}

func (m *TxRequest) GetDetails() *TxRequestDetailsType {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *TxRequest) GetSerialized() *TxRequestSerializedType {
	if m != nil {
		return m.Serialized
	}
	return nil
}

//*
// Request: Reported transaction data
// @prev TxRequest
// @next TxRequest
type TxAck struct {
	Tx                   *TransactionType `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TxAck) Reset()         { *m = TxAck{} }
func (m *TxAck) String() string { return proto.CompactTextString(m) }
func (*TxAck) ProtoMessage()    {}
func (*TxAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{48}
}

func (m *TxAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxAck.Unmarshal(m, b)
}
func (m *TxAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxAck.Marshal(b, m, deterministic)
}
func (m *TxAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxAck.Merge(m, src)
}
func (m *TxAck) XXX_Size() int {
	return xxx_messageInfo_TxAck.Size(m)
}
func (m *TxAck) XXX_DiscardUnknown() {
	xxx_messageInfo_TxAck.DiscardUnknown(m)
}

var xxx_messageInfo_TxAck proto.InternalMessageInfo

func (m *TxAck) GetTx() *TransactionType {
	if m != nil {
		return m.Tx
	}
	return nil
}

//*
// Request: Ask device to sign transaction
// All fields are from the protocol's point of view. Each field defaults to value `0` if missing.
// Note: the first at most 1024 bytes of data MUST be transmitted as part of this message.
// @next PassphraseRequest
// @next PinMatrixRequest
// @next ThetaTxRequest
// @next Failure
type ThetaSignTx struct {
	AddressN         []uint32 `protobuf:"varint,1,rep,packed,name=address_n,json=addressN,proto3" json:"address_n,omitempty"`
	Nonce            []byte   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice         []byte   `protobuf:"bytes,3,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasLimit         []byte   `protobuf:"bytes,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	To               []byte   `protobuf:"bytes,11,opt,name=to,proto3" json:"to,omitempty"`
	Value            []byte   `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	DataInitialChunk []byte   `protobuf:"bytes,7,opt,name=data_initial_chunk,json=dataInitialChunk,proto3" json:"data_initial_chunk,omitempty"`
	DataLength       uint32   `protobuf:"varint,8,opt,name=data_length,json=dataLength,proto3" json:"data_length,omitempty"`
	// ChainId              uint32   `protobuf:"varint,9,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThetaSignTx) Reset()         { *m = ThetaSignTx{} }
func (m *ThetaSignTx) String() string { return proto.CompactTextString(m) }
func (*ThetaSignTx) ProtoMessage()    {}
func (*ThetaSignTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{49}
}

func (m *ThetaSignTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThetaSignTx.Unmarshal(m, b)
}
func (m *ThetaSignTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThetaSignTx.Marshal(b, m, deterministic)
}
func (m *ThetaSignTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThetaSignTx.Merge(m, src)
}
func (m *ThetaSignTx) XXX_Size() int {
	return xxx_messageInfo_ThetaSignTx.Size(m)
}
func (m *ThetaSignTx) XXX_DiscardUnknown() {
	xxx_messageInfo_ThetaSignTx.DiscardUnknown(m)
}

var xxx_messageInfo_ThetaSignTx proto.InternalMessageInfo

func (m *ThetaSignTx) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *ThetaSignTx) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *ThetaSignTx) GetGasPrice() []byte {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func (m *ThetaSignTx) GetGasLimit() []byte {
	if m != nil {
		return m.GasLimit
	}
	return nil
}

func (m *ThetaSignTx) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *ThetaSignTx) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ThetaSignTx) GetDataInitialChunk() []byte {
	if m != nil {
		return m.DataInitialChunk
	}
	return nil
}

func (m *ThetaSignTx) GetDataLength() uint32 {
	if m != nil {
		return m.DataLength
	}
	return 0
}

// func (m *ThetaSignTx) GetChainId() uint32 {
// 	if m != nil {
// 		return m.ChainId
// 	}
// 	return 0
// }

//*
// Response: Device asks for more data from transaction payload, or returns the signature.
// If data_length is set, device awaits that many more bytes of payload.
// Otherwise, the signature_* fields contain the computed transaction signature. All three fields will be present.
// @prev ThetaSignTx
// @next ThetaTxAck
type ThetaTxRequest struct {
	DataLength           uint32   `protobuf:"varint,1,opt,name=data_length,json=dataLength,proto3" json:"data_length,omitempty"`
	SignatureV           uint32   `protobuf:"varint,2,opt,name=signature_v,json=signatureV,proto3" json:"signature_v,omitempty"`
	SignatureR           []byte   `protobuf:"bytes,3,opt,name=signature_r,json=signatureR,proto3" json:"signature_r,omitempty"`
	SignatureS           []byte   `protobuf:"bytes,4,opt,name=signature_s,json=signatureS,proto3" json:"signature_s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThetaTxRequest) Reset()         { *m = ThetaTxRequest{} }
func (m *ThetaTxRequest) String() string { return proto.CompactTextString(m) }
func (*ThetaTxRequest) ProtoMessage()    {}
func (*ThetaTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{50}
}

func (m *ThetaTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThetaTxRequest.Unmarshal(m, b)
}
func (m *ThetaTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThetaTxRequest.Marshal(b, m, deterministic)
}
func (m *ThetaTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThetaTxRequest.Merge(m, src)
}
func (m *ThetaTxRequest) XXX_Size() int {
	return xxx_messageInfo_ThetaTxRequest.Size(m)
}
func (m *ThetaTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ThetaTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ThetaTxRequest proto.InternalMessageInfo

func (m *ThetaTxRequest) GetDataLength() uint32 {
	if m != nil {
		return m.DataLength
	}
	return 0
}

func (m *ThetaTxRequest) GetSignatureV() uint32 {
	if m != nil {
		return m.SignatureV
	}
	return 0
}

func (m *ThetaTxRequest) GetSignatureR() []byte {
	if m != nil {
		return m.SignatureR
	}
	return nil
}

func (m *ThetaTxRequest) GetSignatureS() []byte {
	if m != nil {
		return m.SignatureS
	}
	return nil
}

//*
// Request: Transaction payload data.
// @prev ThetaTxRequest
// @next ThetaTxRequest
type ThetaTxAck struct {
	DataChunk            []byte   `protobuf:"bytes,1,opt,name=data_chunk,json=dataChunk,proto3" json:"data_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThetaTxAck) Reset()         { *m = ThetaTxAck{} }
func (m *ThetaTxAck) String() string { return proto.CompactTextString(m) }
func (*ThetaTxAck) ProtoMessage()    {}
func (*ThetaTxAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{51}
}

func (m *ThetaTxAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThetaTxAck.Unmarshal(m, b)
}
func (m *ThetaTxAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThetaTxAck.Marshal(b, m, deterministic)
}
func (m *ThetaTxAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThetaTxAck.Merge(m, src)
}
func (m *ThetaTxAck) XXX_Size() int {
	return xxx_messageInfo_ThetaTxAck.Size(m)
}
func (m *ThetaTxAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ThetaTxAck.DiscardUnknown(m)
}

var xxx_messageInfo_ThetaTxAck proto.InternalMessageInfo

func (m *ThetaTxAck) GetDataChunk() []byte {
	if m != nil {
		return m.DataChunk
	}
	return nil
}

//*
// Request: Ask device to sign message
// @next ThetaMessageSignature
// @next Failure
type ThetaSignMessage struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,packed,name=address_n,json=addressN,proto3" json:"address_n,omitempty"`
	Message              []byte   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThetaSignMessage) Reset()         { *m = ThetaSignMessage{} }
func (m *ThetaSignMessage) String() string { return proto.CompactTextString(m) }
func (*ThetaSignMessage) ProtoMessage()    {}
func (*ThetaSignMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{52}
}

func (m *ThetaSignMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThetaSignMessage.Unmarshal(m, b)
}
func (m *ThetaSignMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThetaSignMessage.Marshal(b, m, deterministic)
}
func (m *ThetaSignMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThetaSignMessage.Merge(m, src)
}
func (m *ThetaSignMessage) XXX_Size() int {
	return xxx_messageInfo_ThetaSignMessage.Size(m)
}
func (m *ThetaSignMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ThetaSignMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ThetaSignMessage proto.InternalMessageInfo

func (m *ThetaSignMessage) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *ThetaSignMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

//*
// Request: Ask device to verify message
// @next Success
// @next Failure
type ThetaVerifyMessage struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Message              []byte   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThetaVerifyMessage) Reset()         { *m = ThetaVerifyMessage{} }
func (m *ThetaVerifyMessage) String() string { return proto.CompactTextString(m) }
func (*ThetaVerifyMessage) ProtoMessage()    {}
func (*ThetaVerifyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{53}
}

func (m *ThetaVerifyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThetaVerifyMessage.Unmarshal(m, b)
}
func (m *ThetaVerifyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThetaVerifyMessage.Marshal(b, m, deterministic)
}
func (m *ThetaVerifyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThetaVerifyMessage.Merge(m, src)
}
func (m *ThetaVerifyMessage) XXX_Size() int {
	return xxx_messageInfo_ThetaVerifyMessage.Size(m)
}
func (m *ThetaVerifyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ThetaVerifyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ThetaVerifyMessage proto.InternalMessageInfo

func (m *ThetaVerifyMessage) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ThetaVerifyMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *ThetaVerifyMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

//*
// Response: Signed message
// @prev ThetaSignMessage
type ThetaMessageSignature struct {
	Address              []byte   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThetaMessageSignature) Reset()         { *m = ThetaMessageSignature{} }
func (m *ThetaMessageSignature) String() string { return proto.CompactTextString(m) }
func (*ThetaMessageSignature) ProtoMessage()    {}
func (*ThetaMessageSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{54}
}

func (m *ThetaMessageSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThetaMessageSignature.Unmarshal(m, b)
}
func (m *ThetaMessageSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThetaMessageSignature.Marshal(b, m, deterministic)
}
func (m *ThetaMessageSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThetaMessageSignature.Merge(m, src)
}
func (m *ThetaMessageSignature) XXX_Size() int {
	return xxx_messageInfo_ThetaMessageSignature.Size(m)
}
func (m *ThetaMessageSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_ThetaMessageSignature.DiscardUnknown(m)
}

var xxx_messageInfo_ThetaMessageSignature proto.InternalMessageInfo

func (m *ThetaMessageSignature) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ThetaMessageSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

//*
// Request: Ask device to sign identity
// @next SignedIdentity
// @next Failure
type SignIdentity struct {
	Identity             *IdentityType `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	ChallengeHidden      []byte        `protobuf:"bytes,2,opt,name=challenge_hidden,json=challengeHidden,proto3" json:"challenge_hidden,omitempty"`
	ChallengeVisual      string        `protobuf:"bytes,3,opt,name=challenge_visual,json=challengeVisual,proto3" json:"challenge_visual,omitempty"`
	EcdsaCurveName       string        `protobuf:"bytes,4,opt,name=ecdsa_curve_name,json=ecdsaCurveName,proto3" json:"ecdsa_curve_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SignIdentity) Reset()         { *m = SignIdentity{} }
func (m *SignIdentity) String() string { return proto.CompactTextString(m) }
func (*SignIdentity) ProtoMessage()    {}
func (*SignIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{55}
}

func (m *SignIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignIdentity.Unmarshal(m, b)
}
func (m *SignIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignIdentity.Marshal(b, m, deterministic)
}
func (m *SignIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignIdentity.Merge(m, src)
}
func (m *SignIdentity) XXX_Size() int {
	return xxx_messageInfo_SignIdentity.Size(m)
}
func (m *SignIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_SignIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_SignIdentity proto.InternalMessageInfo

func (m *SignIdentity) GetIdentity() *IdentityType {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *SignIdentity) GetChallengeHidden() []byte {
	if m != nil {
		return m.ChallengeHidden
	}
	return nil
}

func (m *SignIdentity) GetChallengeVisual() string {
	if m != nil {
		return m.ChallengeVisual
	}
	return ""
}

func (m *SignIdentity) GetEcdsaCurveName() string {
	if m != nil {
		return m.EcdsaCurveName
	}
	return ""
}

//*
// Response: Device provides signed identity
// @prev SignIdentity
type SignedIdentity struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedIdentity) Reset()         { *m = SignedIdentity{} }
func (m *SignedIdentity) String() string { return proto.CompactTextString(m) }
func (*SignedIdentity) ProtoMessage()    {}
func (*SignedIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{56}
}

func (m *SignedIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedIdentity.Unmarshal(m, b)
}
func (m *SignedIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedIdentity.Marshal(b, m, deterministic)
}
func (m *SignedIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedIdentity.Merge(m, src)
}
func (m *SignedIdentity) XXX_Size() int {
	return xxx_messageInfo_SignedIdentity.Size(m)
}
func (m *SignedIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_SignedIdentity proto.InternalMessageInfo

func (m *SignedIdentity) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SignedIdentity) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *SignedIdentity) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

//*
// Request: Ask device to generate ECDH session key
// @next ECDHSessionKey
// @next Failure
type GetECDHSessionKey struct {
	Identity             *IdentityType `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	PeerPublicKey        []byte        `protobuf:"bytes,2,opt,name=peer_public_key,json=peerPublicKey,proto3" json:"peer_public_key,omitempty"`
	EcdsaCurveName       string        `protobuf:"bytes,3,opt,name=ecdsa_curve_name,json=ecdsaCurveName,proto3" json:"ecdsa_curve_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetECDHSessionKey) Reset()         { *m = GetECDHSessionKey{} }
func (m *GetECDHSessionKey) String() string { return proto.CompactTextString(m) }
func (*GetECDHSessionKey) ProtoMessage()    {}
func (*GetECDHSessionKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{57}
}

func (m *GetECDHSessionKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetECDHSessionKey.Unmarshal(m, b)
}
func (m *GetECDHSessionKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetECDHSessionKey.Marshal(b, m, deterministic)
}
func (m *GetECDHSessionKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetECDHSessionKey.Merge(m, src)
}
func (m *GetECDHSessionKey) XXX_Size() int {
	return xxx_messageInfo_GetECDHSessionKey.Size(m)
}
func (m *GetECDHSessionKey) XXX_DiscardUnknown() {
	xxx_messageInfo_GetECDHSessionKey.DiscardUnknown(m)
}

var xxx_messageInfo_GetECDHSessionKey proto.InternalMessageInfo

func (m *GetECDHSessionKey) GetIdentity() *IdentityType {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *GetECDHSessionKey) GetPeerPublicKey() []byte {
	if m != nil {
		return m.PeerPublicKey
	}
	return nil
}

func (m *GetECDHSessionKey) GetEcdsaCurveName() string {
	if m != nil {
		return m.EcdsaCurveName
	}
	return ""
}

//*
// Response: Device provides ECDH session key
// @prev GetECDHSessionKey
type ECDHSessionKey struct {
	SessionKey           []byte   `protobuf:"bytes,1,opt,name=session_key,json=sessionKey,proto3" json:"session_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ECDHSessionKey) Reset()         { *m = ECDHSessionKey{} }
func (m *ECDHSessionKey) String() string { return proto.CompactTextString(m) }
func (*ECDHSessionKey) ProtoMessage()    {}
func (*ECDHSessionKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{58}
}

func (m *ECDHSessionKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECDHSessionKey.Unmarshal(m, b)
}
func (m *ECDHSessionKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECDHSessionKey.Marshal(b, m, deterministic)
}
func (m *ECDHSessionKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECDHSessionKey.Merge(m, src)
}
func (m *ECDHSessionKey) XXX_Size() int {
	return xxx_messageInfo_ECDHSessionKey.Size(m)
}
func (m *ECDHSessionKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ECDHSessionKey.DiscardUnknown(m)
}

var xxx_messageInfo_ECDHSessionKey proto.InternalMessageInfo

func (m *ECDHSessionKey) GetSessionKey() []byte {
	if m != nil {
		return m.SessionKey
	}
	return nil
}

//*
// Request: Set U2F counter
// @next Success
type SetU2FCounter struct {
	U2FCounter           uint32   `protobuf:"varint,1,opt,name=u2f_counter,json=u2fCounter,proto3" json:"u2f_counter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetU2FCounter) Reset()         { *m = SetU2FCounter{} }
func (m *SetU2FCounter) String() string { return proto.CompactTextString(m) }
func (*SetU2FCounter) ProtoMessage()    {}
func (*SetU2FCounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{59}
}

func (m *SetU2FCounter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetU2FCounter.Unmarshal(m, b)
}
func (m *SetU2FCounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetU2FCounter.Marshal(b, m, deterministic)
}
func (m *SetU2FCounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetU2FCounter.Merge(m, src)
}
func (m *SetU2FCounter) XXX_Size() int {
	return xxx_messageInfo_SetU2FCounter.Size(m)
}
func (m *SetU2FCounter) XXX_DiscardUnknown() {
	xxx_messageInfo_SetU2FCounter.DiscardUnknown(m)
}

var xxx_messageInfo_SetU2FCounter proto.InternalMessageInfo

func (m *SetU2FCounter) GetU2FCounter() uint32 {
	if m != nil {
		return m.U2FCounter
	}
	return 0
}

//*
// Request: Ask device to erase its firmware (so it can be replaced via FirmwareUpload)
// @next Success
// @next FirmwareRequest
// @next Failure
type FirmwareErase struct {
	Length               uint32   `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FirmwareErase) Reset()         { *m = FirmwareErase{} }
func (m *FirmwareErase) String() string { return proto.CompactTextString(m) }
func (*FirmwareErase) ProtoMessage()    {}
func (*FirmwareErase) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{60}
}

func (m *FirmwareErase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirmwareErase.Unmarshal(m, b)
}
func (m *FirmwareErase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirmwareErase.Marshal(b, m, deterministic)
}
func (m *FirmwareErase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirmwareErase.Merge(m, src)
}
func (m *FirmwareErase) XXX_Size() int {
	return xxx_messageInfo_FirmwareErase.Size(m)
}
func (m *FirmwareErase) XXX_DiscardUnknown() {
	xxx_messageInfo_FirmwareErase.DiscardUnknown(m)
}

var xxx_messageInfo_FirmwareErase proto.InternalMessageInfo

func (m *FirmwareErase) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

//*
// Response: Ask for firmware chunk
// @next FirmwareUpload
type FirmwareRequest struct {
	Offset               uint32   `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Length               uint32   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FirmwareRequest) Reset()         { *m = FirmwareRequest{} }
func (m *FirmwareRequest) String() string { return proto.CompactTextString(m) }
func (*FirmwareRequest) ProtoMessage()    {}
func (*FirmwareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{61}
}

func (m *FirmwareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirmwareRequest.Unmarshal(m, b)
}
func (m *FirmwareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirmwareRequest.Marshal(b, m, deterministic)
}
func (m *FirmwareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirmwareRequest.Merge(m, src)
}
func (m *FirmwareRequest) XXX_Size() int {
	return xxx_messageInfo_FirmwareRequest.Size(m)
}
func (m *FirmwareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FirmwareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FirmwareRequest proto.InternalMessageInfo

func (m *FirmwareRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FirmwareRequest) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

//*
// Request: Send firmware in binary form to the device
// @next Success
// @next Failure
type FirmwareUpload struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FirmwareUpload) Reset()         { *m = FirmwareUpload{} }
func (m *FirmwareUpload) String() string { return proto.CompactTextString(m) }
func (*FirmwareUpload) ProtoMessage()    {}
func (*FirmwareUpload) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{62}
}

func (m *FirmwareUpload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirmwareUpload.Unmarshal(m, b)
}
func (m *FirmwareUpload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirmwareUpload.Marshal(b, m, deterministic)
}
func (m *FirmwareUpload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirmwareUpload.Merge(m, src)
}
func (m *FirmwareUpload) XXX_Size() int {
	return xxx_messageInfo_FirmwareUpload.Size(m)
}
func (m *FirmwareUpload) XXX_DiscardUnknown() {
	xxx_messageInfo_FirmwareUpload.DiscardUnknown(m)
}

var xxx_messageInfo_FirmwareUpload proto.InternalMessageInfo

func (m *FirmwareUpload) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *FirmwareUpload) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

//*
// Request: Perform a device self-test
// @next Success
// @next Failure
type SelfTest struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelfTest) Reset()         { *m = SelfTest{} }
func (m *SelfTest) String() string { return proto.CompactTextString(m) }
func (*SelfTest) ProtoMessage()    {}
func (*SelfTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{63}
}

func (m *SelfTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfTest.Unmarshal(m, b)
}
func (m *SelfTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfTest.Marshal(b, m, deterministic)
}
func (m *SelfTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfTest.Merge(m, src)
}
func (m *SelfTest) XXX_Size() int {
	return xxx_messageInfo_SelfTest.Size(m)
}
func (m *SelfTest) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfTest.DiscardUnknown(m)
}

var xxx_messageInfo_SelfTest proto.InternalMessageInfo

func (m *SelfTest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

//*
// Request: "Press" the button on the device
// @next Success
type DebugLinkDecision struct {
	YesNo                bool     `protobuf:"varint,1,opt,name=yes_no,json=yesNo,proto3" json:"yes_no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkDecision) Reset()         { *m = DebugLinkDecision{} }
func (m *DebugLinkDecision) String() string { return proto.CompactTextString(m) }
func (*DebugLinkDecision) ProtoMessage()    {}
func (*DebugLinkDecision) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{64}
}

func (m *DebugLinkDecision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkDecision.Unmarshal(m, b)
}
func (m *DebugLinkDecision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkDecision.Marshal(b, m, deterministic)
}
func (m *DebugLinkDecision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkDecision.Merge(m, src)
}
func (m *DebugLinkDecision) XXX_Size() int {
	return xxx_messageInfo_DebugLinkDecision.Size(m)
}
func (m *DebugLinkDecision) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkDecision.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkDecision proto.InternalMessageInfo

func (m *DebugLinkDecision) GetYesNo() bool {
	if m != nil {
		return m.YesNo
	}
	return false
}

//*
// Request: Computer asks for device state
// @next DebugLinkState
type DebugLinkGetState struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkGetState) Reset()         { *m = DebugLinkGetState{} }
func (m *DebugLinkGetState) String() string { return proto.CompactTextString(m) }
func (*DebugLinkGetState) ProtoMessage()    {}
func (*DebugLinkGetState) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{65}
}

func (m *DebugLinkGetState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkGetState.Unmarshal(m, b)
}
func (m *DebugLinkGetState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkGetState.Marshal(b, m, deterministic)
}
func (m *DebugLinkGetState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkGetState.Merge(m, src)
}
func (m *DebugLinkGetState) XXX_Size() int {
	return xxx_messageInfo_DebugLinkGetState.Size(m)
}
func (m *DebugLinkGetState) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkGetState.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkGetState proto.InternalMessageInfo

//*
// Response: Device current state
// @prev DebugLinkGetState
type DebugLinkState struct {
	Layout               []byte      `protobuf:"bytes,1,opt,name=layout,proto3" json:"layout,omitempty"`
	Pin                  string      `protobuf:"bytes,2,opt,name=pin,proto3" json:"pin,omitempty"`
	Matrix               string      `protobuf:"bytes,3,opt,name=matrix,proto3" json:"matrix,omitempty"`
	Mnemonic             string      `protobuf:"bytes,4,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	Node                 *HDNodeType `protobuf:"bytes,5,opt,name=node,proto3" json:"node,omitempty"`
	PassphraseProtection bool        `protobuf:"varint,6,opt,name=passphrase_protection,json=passphraseProtection,proto3" json:"passphrase_protection,omitempty"`
	ResetWord            string      `protobuf:"bytes,7,opt,name=reset_word,json=resetWord,proto3" json:"reset_word,omitempty"`
	ResetEntropy         []byte      `protobuf:"bytes,8,opt,name=reset_entropy,json=resetEntropy,proto3" json:"reset_entropy,omitempty"`
	RecoveryFakeWord     string      `protobuf:"bytes,9,opt,name=recovery_fake_word,json=recoveryFakeWord,proto3" json:"recovery_fake_word,omitempty"`
	RecoveryWordPos      uint32      `protobuf:"varint,10,opt,name=recovery_word_pos,json=recoveryWordPos,proto3" json:"recovery_word_pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DebugLinkState) Reset()         { *m = DebugLinkState{} }
func (m *DebugLinkState) String() string { return proto.CompactTextString(m) }
func (*DebugLinkState) ProtoMessage()    {}
func (*DebugLinkState) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{66}
}

func (m *DebugLinkState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkState.Unmarshal(m, b)
}
func (m *DebugLinkState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkState.Marshal(b, m, deterministic)
}
func (m *DebugLinkState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkState.Merge(m, src)
}
func (m *DebugLinkState) XXX_Size() int {
	return xxx_messageInfo_DebugLinkState.Size(m)
}
func (m *DebugLinkState) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkState.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkState proto.InternalMessageInfo

func (m *DebugLinkState) GetLayout() []byte {
	if m != nil {
		return m.Layout
	}
	return nil
}

func (m *DebugLinkState) GetPin() string {
	if m != nil {
		return m.Pin
	}
	return ""
}

func (m *DebugLinkState) GetMatrix() string {
	if m != nil {
		return m.Matrix
	}
	return ""
}

func (m *DebugLinkState) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

func (m *DebugLinkState) GetNode() *HDNodeType {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *DebugLinkState) GetPassphraseProtection() bool {
	if m != nil {
		return m.PassphraseProtection
	}
	return false
}

func (m *DebugLinkState) GetResetWord() string {
	if m != nil {
		return m.ResetWord
	}
	return ""
}

func (m *DebugLinkState) GetResetEntropy() []byte {
	if m != nil {
		return m.ResetEntropy
	}
	return nil
}

func (m *DebugLinkState) GetRecoveryFakeWord() string {
	if m != nil {
		return m.RecoveryFakeWord
	}
	return ""
}

func (m *DebugLinkState) GetRecoveryWordPos() uint32 {
	if m != nil {
		return m.RecoveryWordPos
	}
	return 0
}

//*
// Request: Ask device to restart
type DebugLinkStop struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkStop) Reset()         { *m = DebugLinkStop{} }
func (m *DebugLinkStop) String() string { return proto.CompactTextString(m) }
func (*DebugLinkStop) ProtoMessage()    {}
func (*DebugLinkStop) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{67}
}

func (m *DebugLinkStop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkStop.Unmarshal(m, b)
}
func (m *DebugLinkStop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkStop.Marshal(b, m, deterministic)
}
func (m *DebugLinkStop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkStop.Merge(m, src)
}
func (m *DebugLinkStop) XXX_Size() int {
	return xxx_messageInfo_DebugLinkStop.Size(m)
}
func (m *DebugLinkStop) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkStop.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkStop proto.InternalMessageInfo

//*
// Response: Device wants host to log event
type DebugLinkLog struct {
	Level                uint32   `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Bucket               string   `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkLog) Reset()         { *m = DebugLinkLog{} }
func (m *DebugLinkLog) String() string { return proto.CompactTextString(m) }
func (*DebugLinkLog) ProtoMessage()    {}
func (*DebugLinkLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{68}
}

func (m *DebugLinkLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkLog.Unmarshal(m, b)
}
func (m *DebugLinkLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkLog.Marshal(b, m, deterministic)
}
func (m *DebugLinkLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkLog.Merge(m, src)
}
func (m *DebugLinkLog) XXX_Size() int {
	return xxx_messageInfo_DebugLinkLog.Size(m)
}
func (m *DebugLinkLog) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkLog.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkLog proto.InternalMessageInfo

func (m *DebugLinkLog) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *DebugLinkLog) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *DebugLinkLog) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

//*
// Request: Read memory from device
// @next DebugLinkMemory
type DebugLinkMemoryRead struct {
	Address              uint32   `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
	Length               uint32   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkMemoryRead) Reset()         { *m = DebugLinkMemoryRead{} }
func (m *DebugLinkMemoryRead) String() string { return proto.CompactTextString(m) }
func (*DebugLinkMemoryRead) ProtoMessage()    {}
func (*DebugLinkMemoryRead) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{69}
}

func (m *DebugLinkMemoryRead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkMemoryRead.Unmarshal(m, b)
}
func (m *DebugLinkMemoryRead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkMemoryRead.Marshal(b, m, deterministic)
}
func (m *DebugLinkMemoryRead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkMemoryRead.Merge(m, src)
}
func (m *DebugLinkMemoryRead) XXX_Size() int {
	return xxx_messageInfo_DebugLinkMemoryRead.Size(m)
}
func (m *DebugLinkMemoryRead) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkMemoryRead.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkMemoryRead proto.InternalMessageInfo

func (m *DebugLinkMemoryRead) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

func (m *DebugLinkMemoryRead) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

//*
// Response: Device sends memory back
// @prev DebugLinkMemoryRead
type DebugLinkMemory struct {
	Memory               []byte   `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkMemory) Reset()         { *m = DebugLinkMemory{} }
func (m *DebugLinkMemory) String() string { return proto.CompactTextString(m) }
func (*DebugLinkMemory) ProtoMessage()    {}
func (*DebugLinkMemory) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{70}
}

func (m *DebugLinkMemory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkMemory.Unmarshal(m, b)
}
func (m *DebugLinkMemory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkMemory.Marshal(b, m, deterministic)
}
func (m *DebugLinkMemory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkMemory.Merge(m, src)
}
func (m *DebugLinkMemory) XXX_Size() int {
	return xxx_messageInfo_DebugLinkMemory.Size(m)
}
func (m *DebugLinkMemory) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkMemory.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkMemory proto.InternalMessageInfo

func (m *DebugLinkMemory) GetMemory() []byte {
	if m != nil {
		return m.Memory
	}
	return nil
}

//*
// Request: Write memory to device.
// WARNING: Writing to the wrong location can irreparably break the device.
type DebugLinkMemoryWrite struct {
	Address              uint32   `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
	Memory               []byte   `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Flash                bool     `protobuf:"varint,3,opt,name=flash,proto3" json:"flash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkMemoryWrite) Reset()         { *m = DebugLinkMemoryWrite{} }
func (m *DebugLinkMemoryWrite) String() string { return proto.CompactTextString(m) }
func (*DebugLinkMemoryWrite) ProtoMessage()    {}
func (*DebugLinkMemoryWrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{71}
}

func (m *DebugLinkMemoryWrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkMemoryWrite.Unmarshal(m, b)
}
func (m *DebugLinkMemoryWrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkMemoryWrite.Marshal(b, m, deterministic)
}
func (m *DebugLinkMemoryWrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkMemoryWrite.Merge(m, src)
}
func (m *DebugLinkMemoryWrite) XXX_Size() int {
	return xxx_messageInfo_DebugLinkMemoryWrite.Size(m)
}
func (m *DebugLinkMemoryWrite) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkMemoryWrite.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkMemoryWrite proto.InternalMessageInfo

func (m *DebugLinkMemoryWrite) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

func (m *DebugLinkMemoryWrite) GetMemory() []byte {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *DebugLinkMemoryWrite) GetFlash() bool {
	if m != nil {
		return m.Flash
	}
	return false
}

//*
// Request: Erase block of flash on device
// WARNING: Writing to the wrong location can irreparably break the device.
type DebugLinkFlashErase struct {
	Sector               uint32   `protobuf:"varint,1,opt,name=sector,proto3" json:"sector,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkFlashErase) Reset()         { *m = DebugLinkFlashErase{} }
func (m *DebugLinkFlashErase) String() string { return proto.CompactTextString(m) }
func (*DebugLinkFlashErase) ProtoMessage()    {}
func (*DebugLinkFlashErase) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{72}
}

func (m *DebugLinkFlashErase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkFlashErase.Unmarshal(m, b)
}
func (m *DebugLinkFlashErase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkFlashErase.Marshal(b, m, deterministic)
}
func (m *DebugLinkFlashErase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkFlashErase.Merge(m, src)
}
func (m *DebugLinkFlashErase) XXX_Size() int {
	return xxx_messageInfo_DebugLinkFlashErase.Size(m)
}
func (m *DebugLinkFlashErase) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkFlashErase.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkFlashErase proto.InternalMessageInfo

func (m *DebugLinkFlashErase) GetSector() uint32 {
	if m != nil {
		return m.Sector
	}
	return 0
}

func init() {
	proto.RegisterEnum("trezor.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*Initialize)(nil), "trezor.Initialize")
	proto.RegisterType((*GetFeatures)(nil), "trezor.GetFeatures")
	proto.RegisterType((*Features)(nil), "trezor.Features")
	proto.RegisterType((*ClearSession)(nil), "trezor.ClearSession")
	proto.RegisterType((*ApplySettings)(nil), "trezor.ApplySettings")
	proto.RegisterType((*ApplyFlags)(nil), "trezor.ApplyFlags")
	proto.RegisterType((*ChangePin)(nil), "trezor.ChangePin")
	proto.RegisterType((*Ping)(nil), "trezor.Ping")
	proto.RegisterType((*Success)(nil), "trezor.Success")
	proto.RegisterType((*Failure)(nil), "trezor.Failure")
	proto.RegisterType((*ButtonRequest)(nil), "trezor.ButtonRequest")
	proto.RegisterType((*ButtonAck)(nil), "trezor.ButtonAck")
	proto.RegisterType((*PinMatrixRequest)(nil), "trezor.PinMatrixRequest")
	proto.RegisterType((*PinMatrixAck)(nil), "trezor.PinMatrixAck")
	proto.RegisterType((*Cancel)(nil), "trezor.Cancel")
	proto.RegisterType((*PassphraseRequest)(nil), "trezor.PassphraseRequest")
	proto.RegisterType((*PassphraseAck)(nil), "trezor.PassphraseAck")
	proto.RegisterType((*GetEntropy)(nil), "trezor.GetEntropy")
	proto.RegisterType((*Entropy)(nil), "trezor.Entropy")
	proto.RegisterType((*GetPublicKey)(nil), "trezor.GetPublicKey")
	proto.RegisterType((*PublicKey)(nil), "trezor.PublicKey")
	proto.RegisterType((*GetAddress)(nil), "trezor.GetAddress")
	proto.RegisterType((*ThetaGetAddress)(nil), "trezor.ThetaGetAddress")
	proto.RegisterType((*Address)(nil), "trezor.Address")
	proto.RegisterType((*ThetaAddress)(nil), "trezor.ThetaAddress")
	proto.RegisterType((*WipeDevice)(nil), "trezor.WipeDevice")
	proto.RegisterType((*LoadDevice)(nil), "trezor.LoadDevice")
	proto.RegisterType((*ResetDevice)(nil), "trezor.ResetDevice")
	proto.RegisterType((*BackupDevice)(nil), "trezor.BackupDevice")
	proto.RegisterType((*EntropyRequest)(nil), "trezor.EntropyRequest")
	proto.RegisterType((*EntropyAck)(nil), "trezor.EntropyAck")
	proto.RegisterType((*RecoveryDevice)(nil), "trezor.RecoveryDevice")
	proto.RegisterType((*WordRequest)(nil), "trezor.WordRequest")
	proto.RegisterType((*WordAck)(nil), "trezor.WordAck")
	proto.RegisterType((*SignMessage)(nil), "trezor.SignMessage")
	proto.RegisterType((*VerifyMessage)(nil), "trezor.VerifyMessage")
	proto.RegisterType((*MessageSignature)(nil), "trezor.MessageSignature")
	proto.RegisterType((*EncryptMessage)(nil), "trezor.EncryptMessage")
	proto.RegisterType((*EncryptedMessage)(nil), "trezor.EncryptedMessage")
	proto.RegisterType((*DecryptMessage)(nil), "trezor.DecryptMessage")
	proto.RegisterType((*DecryptedMessage)(nil), "trezor.DecryptedMessage")
	proto.RegisterType((*CipherKeyValue)(nil), "trezor.CipherKeyValue")
	proto.RegisterType((*CipheredKeyValue)(nil), "trezor.CipheredKeyValue")
	proto.RegisterType((*EstimateTxSize)(nil), "trezor.EstimateTxSize")
	proto.RegisterType((*TxSize)(nil), "trezor.TxSize")
	proto.RegisterType((*SignTx)(nil), "trezor.SignTx")
	proto.RegisterType((*SimpleSignTx)(nil), "trezor.SimpleSignTx")
	proto.RegisterType((*TxRequest)(nil), "trezor.TxRequest")
	proto.RegisterType((*TxAck)(nil), "trezor.TxAck")
	proto.RegisterType((*ThetaSignTx)(nil), "trezor.ThetaSignTx")
	proto.RegisterType((*ThetaTxRequest)(nil), "trezor.ThetaTxRequest")
	proto.RegisterType((*ThetaTxAck)(nil), "trezor.ThetaTxAck")
	proto.RegisterType((*ThetaSignMessage)(nil), "trezor.ThetaSignMessage")
	proto.RegisterType((*ThetaVerifyMessage)(nil), "trezor.ThetaVerifyMessage")
	proto.RegisterType((*ThetaMessageSignature)(nil), "trezor.ThetaMessageSignature")
	proto.RegisterType((*SignIdentity)(nil), "trezor.SignIdentity")
	proto.RegisterType((*SignedIdentity)(nil), "trezor.SignedIdentity")
	proto.RegisterType((*GetECDHSessionKey)(nil), "trezor.GetECDHSessionKey")
	proto.RegisterType((*ECDHSessionKey)(nil), "trezor.ECDHSessionKey")
	proto.RegisterType((*SetU2FCounter)(nil), "trezor.SetU2FCounter")
	proto.RegisterType((*FirmwareErase)(nil), "trezor.FirmwareErase")
	proto.RegisterType((*FirmwareRequest)(nil), "trezor.FirmwareRequest")
	proto.RegisterType((*FirmwareUpload)(nil), "trezor.FirmwareUpload")
	proto.RegisterType((*SelfTest)(nil), "trezor.SelfTest")
	proto.RegisterType((*DebugLinkDecision)(nil), "trezor.DebugLinkDecision")
	proto.RegisterType((*DebugLinkGetState)(nil), "trezor.DebugLinkGetState")
	proto.RegisterType((*DebugLinkState)(nil), "trezor.DebugLinkState")
	proto.RegisterType((*DebugLinkStop)(nil), "trezor.DebugLinkStop")
	proto.RegisterType((*DebugLinkLog)(nil), "trezor.DebugLinkLog")
	proto.RegisterType((*DebugLinkMemoryRead)(nil), "trezor.DebugLinkMemoryRead")
	proto.RegisterType((*DebugLinkMemory)(nil), "trezor.DebugLinkMemory")
	proto.RegisterType((*DebugLinkMemoryWrite)(nil), "trezor.DebugLinkMemoryWrite")
	proto.RegisterType((*DebugLinkFlashErase)(nil), "trezor.DebugLinkFlashErase")
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_4dc296cbfe5ffcd5) }

var fileDescriptor_4dc296cbfe5ffcd5 = []byte{
	// 3354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5a, 0xcd, 0x73, 0xdc, 0xc6,
	0x72, 0xcf, 0x7e, 0x70, 0xb9, 0xdb, 0xfb, 0xc1, 0x21, 0x44, 0x49, 0x2b, 0x4a, 0x94, 0x28, 0x50,
	0x12, 0x29, 0xc9, 0x96, 0x65, 0xda, 0x71, 0x1c, 0xdb, 0xb1, 0x23, 0x91, 0xa2, 0xa4, 0x58, 0x1f,
	0xcc, 0x92, 0x96, 0x6f, 0x41, 0x81, 0xc0, 0x70, 0x17, 0xe1, 0x2e, 0x00, 0x63, 0x00, 0x9a, 0xab,
	0x43, 0xce, 0xa9, 0x5c, 0x92, 0xaa, 0x24, 0x15, 0x57, 0xe5, 0x10, 0x1f, 0x72, 0x48, 0x6e, 0xb9,
	0xe4, 0xd5, 0x3b, 0xbc, 0x83, 0xef, 0xef, 0xaf, 0x78, 0xc7, 0xf7, 0x3f, 0xbc, 0xc3, 0xab, 0x99,
	0xe9, 0x01, 0x06, 0x20, 0x96, 0x92, 0xec, 0xaa, 0x77, 0xc3, 0xf4, 0xfc, 0xb6, 0xa7, 0xbb, 0xa7,
	0xa7, 0xa7, 0xbb, 0x67, 0xa1, 0x37, 0xa1, 0x8c, 0xd9, 0x43, 0xca, 0xee, 0x85, 0x51, 0x10, 0x07,
	0x46, 0x23, 0x8e, 0xe8, 0xeb, 0x20, 0x5a, 0x6e, 0xc7, 0xd3, 0x50, 0x11, 0xcd, 0x0e, 0xc0, 0x53,
	0xdf, 0x8b, 0x3d, 0x7b, 0xec, 0xbd, 0xa6, 0x66, 0x17, 0xda, 0x8f, 0x69, 0xbc, 0x43, 0xed, 0x38,
	0x89, 0x28, 0x33, 0x7f, 0x9a, 0x83, 0xa6, 0x1a, 0x18, 0x17, 0xa0, 0x71, 0x4c, 0x7d, 0x37, 0x88,
	0xfa, 0x95, 0xd5, 0xca, 0x46, 0x6b, 0x80, 0x23, 0x63, 0x0d, 0xba, 0x13, 0xfb, 0xef, 0x83, 0xc8,
	0x3a, 0xa6, 0x11, 0xf3, 0x02, 0xbf, 0x5f, 0x5d, 0xad, 0x6c, 0x74, 0x07, 0x1d, 0x41, 0x7c, 0x25,
	0x69, 0x02, 0xe4, 0xf9, 0x1a, 0xa8, 0x86, 0x20, 0x4e, 0xd4, 0x40, 0xa1, 0x1d, 0x3b, 0xa3, 0x14,
	0x54, 0x97, 0x20, 0x41, 0x54, 0xa0, 0x75, 0x58, 0x38, 0x08, 0x82, 0x78, 0x1c, 0xd8, 0x2e, 0x8d,
	0xac, 0x49, 0xe0, 0xd2, 0xfe, 0xdc, 0x6a, 0x65, 0xa3, 0x39, 0xe8, 0x65, 0xe4, 0xe7, 0x81, 0x4b,
	0x8d, 0xcb, 0xd0, 0x72, 0xe9, 0xb1, 0xe7, 0x50, 0xcb, 0x73, 0xfb, 0x0d, 0x21, 0x72, 0x53, 0x12,
	0x9e, 0xba, 0xc6, 0x4d, 0xe8, 0x85, 0x9e, 0x6f, 0x71, 0x1b, 0x50, 0x27, 0xe6, 0x6b, 0xcd, 0x0b,
	0x26, 0xdd, 0xd0, 0xf3, 0x77, 0x53, 0xa2, 0xf1, 0x11, 0x9c, 0x0f, 0x6d, 0xc6, 0xc2, 0x51, 0x64,
	0x33, 0xaa, 0xa3, 0x9b, 0x02, 0xbd, 0x94, 0x4d, 0x6a, 0x3f, 0x5a, 0x86, 0xe6, 0xd8, 0xf6, 0x87,
	0x89, 0x3d, 0xa4, 0xfd, 0x96, 0x5c, 0x57, 0x8d, 0x8d, 0x25, 0x98, 0x1b, 0xdb, 0x07, 0x74, 0xdc,
	0x07, 0x31, 0x21, 0x07, 0xc6, 0x2d, 0x98, 0x73, 0x02, 0xcf, 0x67, 0xfd, 0xf6, 0x6a, 0x6d, 0xa3,
	0xbd, 0x49, 0xee, 0xc9, 0x9d, 0xba, 0xb7, 0x15, 0x78, 0xfe, 0xfe, 0x34, 0xa4, 0x03, 0x39, 0x6d,
	0xac, 0x42, 0xdb, 0x4b, 0x37, 0xcb, 0xed, 0x77, 0x84, 0x10, 0x3a, 0x89, 0xaf, 0x1d, 0xd1, 0x63,
	0x4f, 0x58, 0xaf, 0xbb, 0x5a, 0xd9, 0xe8, 0x0c, 0xd2, 0x71, 0xc1, 0x72, 0x23, 0x9b, 0x8d, 0xfa,
	0x3d, 0x01, 0xd1, 0x2c, 0xf7, 0xc4, 0x66, 0x23, 0xce, 0xc4, 0x9b, 0x84, 0x41, 0x14, 0x53, 0xb7,
	0xbf, 0x20, 0xd6, 0x48, 0xc7, 0xc6, 0x0a, 0x00, 0x37, 0x9c, 0x63, 0x3b, 0x23, 0xea, 0xf6, 0x89,
	0x98, 0x6d, 0x85, 0x9e, 0xbf, 0x25, 0x08, 0xc6, 0x5d, 0x58, 0xd4, 0x0c, 0x86, 0xa8, 0x45, 0x81,
	0x22, 0xd9, 0x04, 0x82, 0x6f, 0x03, 0x39, 0xf4, 0xa2, 0xc9, 0xf7, 0x76, 0xc4, 0x6d, 0x4b, 0x19,
	0xf5, 0xe3, 0xbe, 0x21, 0xb0, 0x0b, 0x8a, 0xbe, 0x2b, 0xc9, 0xc6, 0x75, 0xe8, 0xf8, 0x94, 0xba,
	0xcc, 0x3a, 0xb0, 0x9d, 0xa3, 0x24, 0xec, 0x9f, 0x93, 0xaa, 0x0b, 0xda, 0x43, 0x41, 0xe2, 0xa6,
	0x3d, 0x1c, 0xdb, 0x43, 0xd6, 0x5f, 0x12, 0x5e, 0x23, 0x07, 0x66, 0x0f, 0x3a, 0x5b, 0x63, 0x6a,
	0x47, 0x7b, 0x94, 0x71, 0x23, 0x98, 0xff, 0x58, 0x81, 0xee, 0x83, 0x30, 0x1c, 0x4f, 0xf7, 0x68,
	0x1c, 0x7b, 0xfe, 0x90, 0xe5, 0xb6, 0xab, 0x32, 0x6b, 0xbb, 0xaa, 0xfa, 0x76, 0xdd, 0x84, 0x5e,
	0xc2, 0xdd, 0x21, 0xd5, 0x47, 0x78, 0x73, 0x73, 0xd0, 0x4d, 0x18, 0xdd, 0x4d, 0x89, 0xc6, 0x55,
	0x80, 0x51, 0x30, 0xa1, 0xcc, 0x89, 0x28, 0x95, 0xbe, 0xdc, 0x19, 0x68, 0x14, 0xd3, 0x04, 0x10,
	0x92, 0xec, 0x70, 0x41, 0x33, 0xf1, 0x2b, 0xba, 0xf8, 0x6b, 0xd0, 0xda, 0x1a, 0xd9, 0xfe, 0x90,
	0xee, 0x7a, 0x3e, 0x3f, 0x81, 0x11, 0x9d, 0x04, 0xc7, 0x52, 0xce, 0xe6, 0x00, 0x47, 0xe6, 0xff,
	0x56, 0xa0, 0xbe, 0xeb, 0xf9, 0x43, 0xa3, 0x0f, 0xf3, 0x78, 0xe6, 0x51, 0x13, 0x35, 0xe4, 0xfb,
	0x72, 0x90, 0xc4, 0x71, 0x90, 0x73, 0xf9, 0xaa, 0xdc, 0x17, 0x39, 0xa1, 0x39, 0xf0, 0xe9, 0xc3,
	0x51, 0x7b, 0xa7, 0xc3, 0x51, 0x9f, 0x7d, 0x38, 0xcc, 0x35, 0x98, 0xdf, 0x4b, 0x1c, 0x87, 0x32,
	0x36, 0x5b, 0x5a, 0xf3, 0x19, 0xcc, 0xef, 0xd8, 0xde, 0x38, 0x89, 0xa8, 0xb1, 0x0e, 0x75, 0x87,
	0x9f, 0x71, 0x8e, 0xe8, 0x6d, 0x9e, 0x53, 0x27, 0x03, 0xa7, 0xc5, 0xe1, 0x10, 0x00, 0x9d, 0x5b,
	0x35, 0xcf, 0x6d, 0x00, 0xdd, 0x87, 0x42, 0xc5, 0x01, 0xfd, 0x2e, 0xa1, 0x2c, 0x36, 0xde, 0xcf,
	0xf1, 0xbc, 0xa4, 0x78, 0xe6, 0x40, 0x1a, 0x67, 0x03, 0xea, 0xae, 0x1d, 0xdb, 0xc8, 0x56, 0x7c,
	0x9b, 0x6d, 0x68, 0x49, 0xf8, 0x03, 0xe7, 0xc8, 0xdc, 0x06, 0xb2, 0xeb, 0xf9, 0xcf, 0xed, 0x38,
	0xf2, 0x4e, 0xd4, 0x1a, 0xf7, 0xa1, 0xce, 0xc3, 0x2c, 0xae, 0x71, 0x45, 0xad, 0x51, 0xc4, 0xc9,
	0x65, 0x38, 0xd2, 0x5c, 0x85, 0x4e, 0x3a, 0xfb, 0xc0, 0x39, 0x32, 0x08, 0xd4, 0x42, 0xcf, 0x47,
	0xd3, 0xf0, 0x4f, 0xb3, 0x09, 0x8d, 0x2d, 0xdb, 0x77, 0xe8, 0xd8, 0x3c, 0x07, 0x8b, 0x99, 0xa3,
	0x21, 0x2b, 0xf3, 0x03, 0xe8, 0x66, 0x44, 0xce, 0xe1, 0x2a, 0x80, 0xe6, 0xa3, 0x92, 0x91, 0x46,
	0x31, 0x57, 0x01, 0x1e, 0xd3, 0xf8, 0x91, 0x1f, 0x47, 0x41, 0x38, 0xe5, 0x6a, 0x32, 0xef, 0x35,
	0x45, 0xff, 0x13, 0xdf, 0x7c, 0xb7, 0xd4, 0x74, 0x1f, 0xe6, 0xa9, 0xfc, 0x14, 0x88, 0xce, 0x40,
	0x0d, 0xcd, 0x7f, 0xaf, 0x40, 0xe7, 0x31, 0x8d, 0x77, 0x93, 0x83, 0xb1, 0xe7, 0x7c, 0x4d, 0xa7,
	0x3c, 0xf2, 0xda, 0xae, 0x1b, 0x51, 0xc6, 0x2c, 0x2e, 0x7f, 0x6d, 0xa3, 0x3b, 0x68, 0x22, 0xe1,
	0x85, 0xb1, 0x01, 0x84, 0x3a, 0x2e, 0xb3, 0x2d, 0x27, 0x89, 0x8e, 0xa9, 0xe5, 0xdb, 0x13, 0xb5,
	0x61, 0x3d, 0x41, 0xdf, 0xe2, 0xe4, 0x17, 0xf6, 0x84, 0xf2, 0x33, 0xcf, 0x46, 0xc1, 0xf7, 0x96,
	0xeb, 0xb1, 0x70, 0x6c, 0x4f, 0xd1, 0x09, 0xdb, 0x9c, 0xb6, 0x2d, 0x49, 0x7c, 0x25, 0x1e, 0x19,
	0x25, 0x97, 0xba, 0x3c, 0xbc, 0x9c, 0xc0, 0x7f, 0x6f, 0x3e, 0x86, 0x56, 0x26, 0xd3, 0x2d, 0xa8,
	0xfb, 0x6a, 0xcf, 0xdb, 0x9b, 0x86, 0xda, 0x8f, 0x27, 0xdb, 0x2f, 0x02, 0x17, 0xdd, 0xc8, 0xc7,
	0xcd, 0x3e, 0x09, 0x93, 0x03, 0xb5, 0xd9, 0xfc, 0xdb, 0xfc, 0x5d, 0x45, 0x18, 0xea, 0x81, 0x54,
	0xe1, 0x6c, 0xf5, 0x72, 0x12, 0x55, 0xf3, 0x12, 0xbd, 0x8d, 0x46, 0x5f, 0x40, 0x73, 0x92, 0x8c,
	0x63, 0x8f, 0x79, 0x43, 0xa1, 0x50, 0x7b, 0x73, 0x55, 0xc9, 0xfa, 0x1c, 0xe9, 0x03, 0xea, 0x52,
	0x3a, 0xd9, 0x73, 0x22, 0x2f, 0x94, 0xfe, 0x93, 0xfe, 0xc2, 0xf8, 0x14, 0xda, 0x4c, 0xd0, 0x2d,
	0xe1, 0x7c, 0x73, 0xc2, 0xf9, 0x2e, 0x2a, 0x06, 0x4f, 0xfd, 0x30, 0x89, 0xb5, 0xdf, 0x01, 0x4b,
	0xbf, 0xcd, 0xbf, 0x85, 0x85, 0xfd, 0x11, 0x8d, 0xed, 0xb7, 0xd5, 0xb3, 0xa8, 0x4a, 0xf5, 0x94,
	0x2a, 0xdc, 0x79, 0x14, 0xab, 0x3e, 0xcc, 0xe3, 0x2f, 0xd5, 0x51, 0xc7, 0xa1, 0xb9, 0x01, 0x1d,
	0xb1, 0xee, 0x0c, 0x64, 0x27, 0x43, 0x76, 0x00, 0xbe, 0xf5, 0x42, 0xba, 0x2d, 0xae, 0x70, 0xf3,
	0x9f, 0xab, 0x00, 0xcf, 0x02, 0xdb, 0x95, 0x43, 0x1e, 0xc4, 0x27, 0x3e, 0x9d, 0x04, 0xbe, 0xe7,
	0xa8, 0x20, 0xae, 0xc6, 0xe9, 0xd6, 0x57, 0xdf, 0xb0, 0xf5, 0x78, 0xe0, 0x6a, 0xe9, 0x81, 0xfb,
	0x59, 0x11, 0x2e, 0x77, 0x9f, 0xcc, 0xcd, 0xba, 0x4f, 0x1a, 0xfa, 0x7d, 0xb2, 0x06, 0x5d, 0x76,
	0xe4, 0x85, 0x96, 0x33, 0xa2, 0xce, 0x11, 0x4b, 0x26, 0x98, 0x8b, 0x74, 0x38, 0x71, 0x0b, 0x69,
	0xc6, 0x35, 0x68, 0x27, 0x9b, 0x87, 0x96, 0x13, 0x24, 0x7e, 0x4c, 0x23, 0x91, 0x80, 0x74, 0x07,
	0x90, 0x6c, 0x1e, 0x6e, 0x49, 0x8a, 0xf9, 0x63, 0x15, 0xda, 0x03, 0xca, 0x68, 0x8c, 0x26, 0xb9,
	0x09, 0x3d, 0xdc, 0x1c, 0x2b, 0xb2, 0x7d, 0x37, 0x98, 0xe0, 0xad, 0xd1, 0x45, 0xea, 0x40, 0x10,
	0xb9, 0xb8, 0x2c, 0x8e, 0xa8, 0x3f, 0x8c, 0x47, 0x98, 0xb9, 0xa5, 0xe3, 0xd9, 0xfa, 0xd7, 0xce,
	0xd0, 0xff, 0xf4, 0xed, 0x51, 0x2f, 0xbb, 0x3d, 0xde, 0xdd, 0x4c, 0x05, 0x0b, 0xcc, 0x17, 0x2d,
	0xc0, 0x01, 0xc2, 0x8e, 0x98, 0x23, 0xc8, 0x1c, 0x0d, 0x38, 0x49, 0xa6, 0x08, 0x3c, 0x19, 0x90,
	0x5f, 0xe8, 0x44, 0x04, 0x7a, 0x18, 0xde, 0x54, 0x0c, 0xbd, 0x05, 0x80, 0x14, 0x1e, 0x40, 0x67,
	0xc7, 0xbc, 0x5f, 0x55, 0xa1, 0x37, 0xa0, 0x4e, 0x70, 0x4c, 0xa3, 0x29, 0xda, 0x7b, 0x05, 0xe0,
	0xfb, 0x20, 0x72, 0xa5, 0x7c, 0x18, 0x45, 0x5b, 0x9c, 0x22, 0xc4, 0x9b, 0x6d, 0xcb, 0xea, 0x3b,
	0xd9, 0xb2, 0xf6, 0x26, 0x5b, 0xd6, 0x67, 0xd9, 0x72, 0x4e, 0xb7, 0xe5, 0x6d, 0x20, 0xd4, 0x3f,
	0x0c, 0x22, 0x87, 0x5a, 0x5c, 0xc4, 0xb1, 0xc7, 0x62, 0x61, 0xec, 0xe6, 0x60, 0x01, 0xe9, 0xdf,
	0x22, 0x99, 0x47, 0x44, 0x11, 0x4c, 0xa4, 0xc7, 0x89, 0xef, 0xe2, 0x56, 0xb4, 0x4e, 0x6d, 0xc5,
	0x45, 0x98, 0x77, 0xa3, 0xa9, 0x15, 0x25, 0xbe, 0xc8, 0x74, 0x9b, 0x83, 0x86, 0x1b, 0x4d, 0x07,
	0x89, 0x6f, 0x7e, 0x06, 0x6d, 0xce, 0x59, 0x5d, 0x93, 0x77, 0x73, 0xd7, 0x64, 0x1a, 0xa9, 0x34,
	0x88, 0x76, 0x43, 0xae, 0xc0, 0x3c, 0x9f, 0xe0, 0x3b, 0x63, 0x40, 0x9d, 0xcb, 0x8d, 0x67, 0x5d,
	0x7c, 0x9b, 0xff, 0x59, 0x81, 0xf6, 0x9e, 0x37, 0xf4, 0x9f, 0x63, 0xce, 0x73, 0x66, 0xfc, 0x2a,
	0xa4, 0x0b, 0x9d, 0x2c, 0x55, 0xca, 0x45, 0xf0, 0x5a, 0x21, 0x82, 0x17, 0x02, 0x6c, 0xfd, 0xed,
	0x03, 0xec, 0x3f, 0x40, 0xf7, 0x15, 0x8d, 0xbc, 0xc3, 0xa9, 0x12, 0x6f, 0x66, 0x4c, 0x34, 0xae,
	0x40, 0x8b, 0x79, 0x43, 0x5f, 0xd4, 0x5d, 0x28, 0x5d, 0x46, 0xd0, 0x25, 0xaf, 0x9d, 0x21, 0x79,
	0xf1, 0x36, 0xfc, 0x1b, 0x20, 0xb8, 0xf2, 0x9e, 0xce, 0xea, 0xe7, 0x88, 0x60, 0xfe, 0x57, 0x85,
	0x1f, 0x1c, 0x27, 0x9a, 0x86, 0xb1, 0xd2, 0xe6, 0x02, 0x34, 0xc2, 0xe4, 0xe0, 0x88, 0xaa, 0x93,
	0x82, 0xa3, 0x33, 0xec, 0x7c, 0x1d, 0x3a, 0x2a, 0x3e, 0x05, 0xfe, 0x38, 0xbd, 0x0c, 0x91, 0xf6,
	0xd2, 0x1f, 0x17, 0x12, 0x89, 0xfa, 0x59, 0x37, 0xed, 0x5c, 0x41, 0xdb, 0x57, 0x40, 0x50, 0x40,
	0xea, 0x2a, 0x11, 0x97, 0x60, 0xce, 0x0f, 0x7c, 0x87, 0xa2, 0x84, 0x72, 0x70, 0x86, 0x80, 0x06,
	0xd4, 0x47, 0x13, 0xdb, 0x41, 0x2b, 0x8b, 0x6f, 0xf3, 0x3b, 0xe8, 0x6d, 0xd3, 0x9c, 0xe2, 0x67,
	0x7a, 0x59, 0xba, 0x64, 0x75, 0xc6, 0x92, 0xb5, 0xf2, 0x25, 0xeb, 0xda, 0x92, 0x3b, 0x40, 0x70,
	0xc9, 0x4c, 0x95, 0x42, 0xea, 0xac, 0x71, 0xd0, 0xb6, 0xb4, 0x9a, 0xbf, 0x69, 0x7f, 0x5b, 0x81,
	0xde, 0x96, 0x17, 0x8e, 0x68, 0xf4, 0x35, 0x9d, 0xbe, 0xb2, 0xc7, 0xc9, 0x1b, 0x64, 0x27, 0x50,
	0xe3, 0xdb, 0x29, 0xb9, 0xf0, 0x4f, 0xae, 0xcd, 0x31, 0xff, 0x1d, 0x4a, 0x2d, 0x07, 0x32, 0x48,
	0x0a, 0xf9, 0x30, 0xd0, 0xab, 0xa1, 0x71, 0x03, 0x7a, 0x36, 0x3b, 0xb2, 0x02, 0xdf, 0x52, 0x00,
	0x59, 0xa9, 0x77, 0x6c, 0x76, 0xf4, 0xd2, 0x7f, 0x74, 0x0a, 0xe5, 0x4a, 0x35, 0x31, 0x10, 0x49,
	0x14, 0xaa, 0x6e, 0xf4, 0xa0, 0xea, 0x1d, 0x8b, 0x98, 0xdf, 0x19, 0x54, 0xbd, 0x63, 0x73, 0x03,
	0x88, 0x54, 0x86, 0xba, 0xa9, 0x3a, 0xa9, 0x7c, 0x15, 0x4d, 0x3e, 0x33, 0x81, 0xde, 0x23, 0x16,
	0x7b, 0x13, 0x3b, 0xa6, 0xfb, 0x27, 0x7b, 0xde, 0x6b, 0xca, 0xef, 0xdb, 0x20, 0x89, 0xc3, 0x24,
	0x66, 0xb9, 0x60, 0xdd, 0x41, 0xa2, 0x8c, 0xd7, 0xd7, 0xa1, 0xe3, 0xf9, 0x1a, 0x46, 0xde, 0x8d,
	0x6d, 0x49, 0x93, 0x90, 0xb3, 0x22, 0x85, 0x79, 0x1d, 0x1a, 0xb8, 0xdc, 0x45, 0x98, 0x8f, 0x4f,
	0x2c, 0x2d, 0xb7, 0x6e, 0xc4, 0x62, 0xc2, 0xfc, 0xef, 0x0a, 0x34, 0xf8, 0x61, 0xdc, 0x3f, 0xf9,
	0x93, 0x88, 0xc4, 0x77, 0x2a, 0xdf, 0x59, 0x51, 0x43, 0xfe, 0xb3, 0x71, 0xe0, 0x1c, 0x59, 0xb1,
	0x87, 0x67, 0xa9, 0x3b, 0x68, 0x72, 0xc2, 0xbe, 0x37, 0xa1, 0xe6, 0x1f, 0x2a, 0xd0, 0xd9, 0xf3,
	0x26, 0xe1, 0x98, 0xa2, 0xb0, 0x77, 0xa1, 0x21, 0xd7, 0x14, 0x3e, 0xd3, 0xce, 0xaa, 0xb2, 0xfd,
	0x13, 0x11, 0x01, 0x45, 0xec, 0x43, 0x88, 0x71, 0x0f, 0xe6, 0x51, 0x89, 0x7e, 0x55, 0xa0, 0x97,
	0x32, 0xf4, 0x4b, 0x31, 0x21, 0xe0, 0x0a, 0x64, 0x7c, 0x0e, 0x9d, 0x38, 0xb2, 0x7d, 0x66, 0x8b,
	0xab, 0x8d, 0xf5, 0x6b, 0xe2, 0x47, 0x69, 0x88, 0xdd, 0xcf, 0xe6, 0xc4, 0xef, 0x72, 0xe0, 0x33,
	0x23, 0xa0, 0xae, 0xfe, 0xdc, 0x19, 0xea, 0x37, 0x0a, 0xea, 0xff, 0xa6, 0x02, 0xad, 0xfd, 0xb4,
	0xae, 0xfb, 0x04, 0x3a, 0x91, 0xfc, 0xb4, 0xb4, 0x8b, 0x2b, 0xb5, 0x80, 0x7e, 0x69, 0xb5, 0xa3,
	0x6c, 0x60, 0x7c, 0x02, 0xf3, 0x2e, 0x8d, 0x6d, 0x6f, 0xcc, 0x30, 0x0f, 0xbd, 0x92, 0x99, 0x01,
	0x7f, 0xb4, 0x2d, 0xe7, 0xa5, 0x39, 0x10, 0x6c, 0x7c, 0x05, 0xc0, 0x68, 0xa4, 0x3a, 0x3e, 0x35,
	0xf1, 0xd3, 0x6b, 0xa7, 0x7e, 0xba, 0x97, 0x42, 0xf0, 0xde, 0x49, 0xc7, 0xe6, 0x7d, 0x98, 0xdb,
	0x17, 0xf5, 0xe4, 0x3a, 0x54, 0xe3, 0x13, 0xac, 0x7f, 0x66, 0x9a, 0xb3, 0x1a, 0x9f, 0x98, 0xff,
	0x54, 0x85, 0xb6, 0xc8, 0xc9, 0x71, 0xbb, 0x7f, 0x46, 0x84, 0xbb, 0x0c, 0xad, 0xa1, 0xcd, 0xac,
	0x30, 0xf2, 0x1c, 0x15, 0x2d, 0x9a, 0x43, 0x9b, 0xed, 0xf2, 0xb1, 0x9a, 0x1c, 0x7b, 0x13, 0x2f,
	0xc6, 0x48, 0xc7, 0x27, 0x9f, 0xf1, 0x31, 0x3f, 0xe7, 0x71, 0x20, 0xf6, 0xa7, 0x33, 0xa8, 0xc6,
	0x41, 0x76, 0xa6, 0x1b, 0x7a, 0xcc, 0x79, 0x0f, 0x0c, 0x5e, 0x86, 0x5b, 0xd8, 0xfa, 0xb2, 0x9c,
	0x51, 0xe2, 0x1f, 0x61, 0x74, 0x20, 0x7c, 0x06, 0x7b, 0x9a, 0x5b, 0x9c, 0xce, 0xb3, 0x15, 0x81,
	0x1e, 0xcb, 0x2c, 0x17, 0x53, 0x67, 0x4e, 0x7a, 0x26, 0xf3, 0xdc, 0x4b, 0xd0, 0x74, 0x46, 0xb6,
	0xe7, 0x5b, 0x9e, 0x8b, 0xb9, 0xcc, 0xbc, 0x18, 0x3f, 0x75, 0xcd, 0x7f, 0xab, 0x40, 0x4f, 0x18,
	0x23, 0x73, 0x81, 0x02, 0xbb, 0xca, 0x29, 0x76, 0x3c, 0x0f, 0x55, 0x77, 0xa5, 0x75, 0x8c, 0xc7,
	0x14, 0x52, 0xd2, 0xab, 0x3c, 0x20, 0x42, 0x03, 0x65, 0x80, 0x41, 0x1e, 0xc0, 0x54, 0xef, 0x28,
	0x25, 0xed, 0x99, 0x77, 0x01, 0x50, 0x2a, 0xbe, 0xb5, 0x2b, 0x20, 0x96, 0x47, 0x33, 0xc8, 0xe8,
	0xd7, 0xe2, 0x14, 0xa1, 0xbf, 0xf9, 0x14, 0x48, 0xba, 0x9f, 0xbf, 0x2c, 0x39, 0x32, 0x0f, 0xc1,
	0x10, 0xac, 0xce, 0x4c, 0x65, 0x3a, 0xbf, 0x38, 0x95, 0x31, 0x5f, 0xc2, 0x79, 0xb1, 0xce, 0x9b,
	0x52, 0x96, 0xb7, 0x5d, 0xca, 0xfc, 0x49, 0x04, 0xb1, 0xa1, 0xff, 0xd4, 0xa5, 0x7e, 0xec, 0xc5,
	0x53, 0xe3, 0x3e, 0x34, 0x3d, 0xfc, 0xc6, 0x43, 0x91, 0x06, 0x26, 0x85, 0x91, 0xc5, 0xb5, 0x42,
	0xf1, 0x9c, 0xd9, 0x19, 0xd9, 0x63, 0xbe, 0xed, 0xd4, 0x1a, 0x79, 0xae, 0x4b, 0x7d, 0x5c, 0x67,
	0x21, 0xa5, 0x3f, 0x11, 0xe4, 0x3c, 0xf4, 0xd8, 0x63, 0x89, 0x3d, 0xc6, 0x68, 0x9c, 0x41, 0x5f,
	0x09, 0x72, 0x69, 0x3f, 0xa4, 0x5e, 0xd6, 0x0f, 0x31, 0x87, 0xd0, 0xe3, 0x1a, 0x50, 0x37, 0xd5,
	0x61, 0x76, 0xfe, 0xb6, 0x02, 0x10, 0x8a, 0xde, 0x87, 0xa5, 0xee, 0xf0, 0xce, 0xa0, 0x15, 0xa6,
	0xdd, 0x90, 0x9c, 0xad, 0x6a, 0x45, 0x5b, 0xfd, 0x47, 0x05, 0x16, 0x1f, 0xd3, 0xf8, 0xd1, 0xd6,
	0xf6, 0x13, 0x6c, 0x9b, 0xf2, 0xdf, 0xbc, 0xbb, 0xc1, 0x6e, 0xc1, 0x42, 0x48, 0x69, 0x64, 0x9d,
	0x92, 0xa4, 0xcb, 0xc9, 0x59, 0x6f, 0xa6, 0xcc, 0x04, 0xb5, 0x52, 0x13, 0x7c, 0x08, 0xbd, 0x82,
	0x54, 0xfc, 0xa4, 0xc8, 0x91, 0x95, 0x25, 0x9f, 0xc0, 0x52, 0x80, 0x79, 0x1f, 0xba, 0x7b, 0x34,
	0xfe, 0x66, 0x73, 0x47, 0xab, 0x12, 0xf5, 0xda, 0xa5, 0x72, 0xaa, 0x90, 0x5e, 0x87, 0xee, 0x0e,
	0xb6, 0x9f, 0x1f, 0x89, 0x46, 0xee, 0x05, 0x68, 0xe4, 0xce, 0x3a, 0x8e, 0xcc, 0x07, 0xb0, 0xa0,
	0x80, 0x2a, 0x36, 0x5c, 0x80, 0x46, 0x70, 0x78, 0xc8, 0xa8, 0xba, 0xc0, 0x71, 0xa4, 0xb1, 0xa8,
	0xe6, 0x58, 0x7c, 0x09, 0x3d, 0xc5, 0xe2, 0x9b, 0x70, 0x1c, 0xd8, 0x2e, 0xdf, 0xd3, 0xd0, 0x9e,
	0xf2, 0x4f, 0xe5, 0xe0, 0x38, 0x14, 0xc9, 0xa1, 0xcd, 0x46, 0x68, 0x43, 0xf1, 0x6d, 0xde, 0x80,
	0xe6, 0x1e, 0x1d, 0x1f, 0xee, 0xf3, 0xb5, 0x67, 0xfe, 0xd2, 0xbc, 0x03, 0x8b, 0xdb, 0xf4, 0x20,
	0x19, 0x3e, 0xf3, 0xfc, 0xa3, 0x6d, 0xea, 0xc8, 0xe7, 0x80, 0xf3, 0xd0, 0x98, 0x52, 0x66, 0xf9,
	0x01, 0xf6, 0x05, 0xe6, 0xa6, 0x94, 0xbd, 0x08, 0xcc, 0x73, 0x1a, 0xf6, 0x31, 0x8d, 0xf7, 0x62,
	0x3b, 0xa6, 0xe6, 0xef, 0xab, 0x3c, 0xef, 0x45, 0xaa, 0x20, 0x09, 0x8d, 0xec, 0x69, 0x90, 0xc4,
	0x2a, 0xe1, 0x97, 0x23, 0xd5, 0x45, 0xa9, 0x66, 0x5d, 0x94, 0x0b, 0xd0, 0x98, 0x88, 0xae, 0x26,
	0x6e, 0x2a, 0x8e, 0x72, 0x3d, 0x9b, 0xfa, 0x8c, 0x9e, 0xcd, 0xdc, 0x1b, 0x7a, 0x36, 0x33, 0xab,
	0xea, 0xc6, 0x19, 0x55, 0xf5, 0x0a, 0x40, 0x44, 0x19, 0x8d, 0x45, 0xe9, 0x2b, 0x6e, 0x8d, 0xd6,
	0xa0, 0x25, 0x28, 0xbc, 0xbc, 0xe4, 0xb9, 0x98, 0x9c, 0x56, 0xb5, 0x7f, 0x53, 0x28, 0xd8, 0x11,
	0x44, 0xd5, 0x0e, 0x7d, 0x0f, 0x8c, 0x08, 0xeb, 0x7f, 0xeb, 0xd0, 0x3e, 0x92, 0x65, 0x34, 0x3e,
	0xf7, 0x10, 0x35, 0xb3, 0x63, 0x1f, 0x89, 0x3a, 0xda, 0xb8, 0x03, 0x8b, 0x29, 0x5a, 0x34, 0x09,
	0xc2, 0x80, 0x89, 0xc2, 0xb8, 0x3b, 0x58, 0x50, 0x13, 0x1c, 0xb8, 0x1b, 0x30, 0x73, 0x01, 0xba,
	0x9a, 0xa9, 0x83, 0xd0, 0xdc, 0x85, 0x4e, 0x4a, 0x78, 0x16, 0x0c, 0x45, 0x45, 0x4f, 0x8f, 0xe9,
	0x58, 0xbd, 0x14, 0x88, 0x01, 0xb7, 0xf2, 0x41, 0xe2, 0x1c, 0xd1, 0x18, 0x4d, 0x8f, 0x23, 0x51,
	0xbe, 0xd3, 0x93, 0x18, 0x6d, 0x2f, 0xbe, 0xcd, 0xc7, 0x70, 0x2e, 0xe5, 0xf8, 0x9c, 0x4e, 0x82,
	0x68, 0x3a, 0xa0, 0xd2, 0xf5, 0xf4, 0x70, 0xd2, 0xcd, 0xc2, 0xc9, 0x2c, 0xf7, 0xbd, 0x0d, 0x0b,
	0x05, 0x46, 0x62, 0xb7, 0xc5, 0x97, 0xf2, 0x0b, 0x39, 0x32, 0xff, 0x0e, 0x96, 0x0a, 0xd0, 0x6f,
	0x23, 0x2f, 0xa6, 0x67, 0x2f, 0x8a, 0x9c, 0xaa, 0x3a, 0x27, 0x7c, 0x29, 0x61, 0x23, 0xac, 0x18,
	0xe5, 0xc0, 0x7c, 0x5f, 0xd3, 0x69, 0x87, 0x53, 0xd2, 0xb3, 0xcb, 0xa8, 0x13, 0x07, 0xea, 0xa0,
	0xe3, 0xe8, 0xce, 0xbf, 0x9e, 0x87, 0x36, 0x5e, 0x2e, 0x22, 0x3f, 0x5b, 0x85, 0x0b, 0xda, 0xd0,
	0xca, 0xde, 0x44, 0xc9, 0x9f, 0x2d, 0xd7, 0xff, 0xe5, 0xff, 0xfb, 0x15, 0x63, 0x39, 0x2d, 0xa0,
	0x05, 0x62, 0xd7, 0xf3, 0x87, 0xa4, 0x82, 0x73, 0x2b, 0x70, 0x4e, 0x9f, 0xc3, 0x17, 0x0e, 0x52,
	0x5d, 0xae, 0xff, 0x50, 0x32, 0x8d, 0x8f, 0x17, 0xa4, 0x86, 0xd3, 0xd7, 0xe0, 0xbc, 0x3e, 0x9d,
	0x3e, 0xf8, 0x90, 0x3a, 0xb2, 0x2f, 0x08, 0x97, 0xb5, 0x41, 0xc9, 0x1c, 0x22, 0xd6, 0xe1, 0x52,
	0x6e, 0x05, 0x3d, 0x7e, 0x91, 0xc6, 0x72, 0x93, 0x83, 0x7e, 0xcd, 0x81, 0x1b, 0xb0, 0x5c, 0x06,
	0x94, 0xc1, 0x87, 0xcc, 0x6b, 0xc8, 0xdb, 0x70, 0xb9, 0x0c, 0x89, 0x91, 0x8e, 0x34, 0x97, 0x9b,
	0x3f, 0x28, 0x68, 0x41, 0xbe, 0xec, 0x51, 0x81, 0xb4, 0xca, 0x0d, 0xa4, 0xa6, 0x01, 0x2d, 0x60,
	0x42, 0xbf, 0xc0, 0x20, 0xbd, 0x1d, 0x48, 0x1b, 0x59, 0x14, 0xac, 0x94, 0x01, 0x3a, 0xc8, 0xa4,
	0x20, 0x45, 0xd6, 0x1d, 0x26, 0x5d, 0x64, 0x71, 0x1d, 0x2e, 0xea, 0x08, 0xad, 0x5b, 0x4a, 0x7a,
	0x08, 0xb9, 0x02, 0x46, 0x6e, 0x27, 0x45, 0x0a, 0x4c, 0x16, 0x70, 0xf6, 0x46, 0x5e, 0x4e, 0xbd,
	0x2a, 0x22, 0x64, 0xb9, 0xc1, 0x31, 0xcd, 0x8a, 0x71, 0x15, 0x96, 0x72, 0x96, 0xc3, 0x17, 0x74,
	0xb2, 0x88, 0x82, 0xde, 0x82, 0x2b, 0x05, 0x4f, 0xca, 0xbd, 0x09, 0x11, 0x23, 0xc5, 0xf5, 0x4b,
	0x71, 0x0f, 0x9c, 0x23, 0x72, 0x4e, 0xee, 0xd4, 0xff, 0x95, 0xc8, 0x2c, 0xdf, 0x88, 0xc8, 0x52,
	0xb9, 0xdd, 0xd2, 0x3c, 0x96, 0x9c, 0xc7, 0x65, 0x2e, 0xc3, 0x62, 0x1e, 0xc0, 0xf9, 0x5f, 0x48,
	0x35, 0xce, 0xf9, 0x4b, 0xbe, 0x81, 0x40, 0x2e, 0x22, 0xaa, 0xb0, 0x7f, 0xfa, 0x8b, 0x2b, 0xe9,
	0x23, 0x66, 0x2d, 0xef, 0xa2, 0xb9, 0x47, 0x58, 0x72, 0xa9, 0x1c, 0x94, 0x7b, 0x92, 0x23, 0xcb,
	0x28, 0xf0, 0x5a, 0x5e, 0xa3, 0xf4, 0x21, 0x8e, 0x5c, 0xd6, 0x8c, 0x52, 0xf0, 0x86, 0xec, 0xa5,
	0x95, 0x5c, 0x29, 0x3f, 0x55, 0xd9, 0xcb, 0x07, 0x59, 0x29, 0xf7, 0x5a, 0x35, 0x7d, 0x35, 0xf5,
	0xda, 0xdc, 0x3e, 0xab, 0x8b, 0x98, 0xac, 0x6a, 0xa7, 0xa8, 0x60, 0x19, 0xbd, 0xfd, 0x4c, 0xcc,
	0x72, 0x1b, 0xe7, 0x5b, 0xd2, 0x64, 0xad, 0xdc, 0xbd, 0xb3, 0x36, 0x35, 0xb9, 0x51, 0xee, 0xde,
	0x5a, 0xba, 0x4f, 0x6e, 0x95, 0xdb, 0x37, 0x97, 0xc6, 0x93, 0x75, 0x04, 0x15, 0xfc, 0xb3, 0x98,
	0x83, 0x93, 0x0d, 0x94, 0x68, 0x1d, 0x56, 0x72, 0xfe, 0x59, 0x7c, 0x91, 0x24, 0xb7, 0x53, 0xe0,
	0xa5, 0x72, 0x20, 0x97, 0xfe, 0x8e, 0xb6, 0x69, 0xb7, 0x0a, 0x96, 0xc8, 0xf5, 0x6d, 0xc8, 0x5d,
	0xed, 0x84, 0x19, 0x79, 0x97, 0x15, 0xf3, 0xef, 0x2d, 0x37, 0x7e, 0x90, 0xf3, 0x05, 0x8b, 0xe6,
	0x3b, 0xf5, 0xe4, 0xfd, 0x72, 0x7b, 0x69, 0x4d, 0x67, 0x72, 0xaf, 0x3c, 0x72, 0x63, 0xfb, 0x99,
	0x7c, 0x50, 0x6e, 0xa9, 0x62, 0x47, 0x8a, 0xdc, 0x4f, 0x4f, 0x72, 0x61, 0x87, 0xf5, 0x16, 0x22,
	0xf9, 0x30, 0xd5, 0x6b, 0x23, 0xcf, 0xaf, 0xd8, 0xc2, 0x24, 0x9b, 0xa9, 0x86, 0x05, 0x8e, 0xf9,
	0xa6, 0x24, 0xf9, 0x68, 0x16, 0xc7, 0x62, 0x27, 0x91, 0x7c, 0x9c, 0x72, 0x34, 0x8b, 0xb1, 0x2d,
	0x2b, 0x96, 0xc8, 0x9f, 0x97, 0x7b, 0x6a, 0xbe, 0x1c, 0x21, 0x9f, 0xa0, 0xb6, 0x05, 0xbb, 0x6a,
	0xff, 0x28, 0x22, 0x7f, 0x81, 0x8c, 0x6e, 0xe6, 0x2f, 0x97, 0xc2, 0xd3, 0x23, 0xf9, 0xb4, 0x3c,
	0xae, 0xe8, 0x2f, 0x85, 0xe4, 0x2f, 0xcb, 0x57, 0xd3, 0x3a, 0x17, 0xe4, 0xb3, 0x72, 0xb1, 0xf3,
	0xf5, 0x3c, 0xf9, 0xbc, 0xfc, 0x80, 0x65, 0xf5, 0x35, 0xf9, 0x22, 0xbd, 0x65, 0x57, 0x8a, 0xf7,
	0x5c, 0xae, 0x1a, 0x21, 0x7f, 0x35, 0xe3, 0x44, 0xe7, 0x51, 0x5f, 0xa6, 0x71, 0xec, 0x52, 0x3e,
	0x7e, 0x68, 0x65, 0x0a, 0xf9, 0xaa, 0xdc, 0xc5, 0x8a, 0x85, 0x3c, 0xf9, 0x6b, 0xc4, 0x6d, 0xc0,
	0xd5, 0x53, 0xb8, 0xfc, 0xf1, 0x7e, 0x80, 0xc8, 0xbb, 0x70, 0xfd, 0x14, 0xf2, 0xd4, 0x19, 0x7f,
	0x88, 0x32, 0xde, 0xcd, 0xab, 0x7c, 0xaa, 0x8c, 0x20, 0xee, 0x72, 0xf3, 0x47, 0x75, 0x7c, 0xd7,
	0x67, 0x80, 0x55, 0x1d, 0x41, 0xe8, 0x72, 0xfd, 0xc7, 0x12, 0xfb, 0xe4, 0x4b, 0x0b, 0x72, 0xb8,
	0x5c, 0xff, 0x9f, 0x12, 0xfb, 0xe4, 0xb2, 0x62, 0x32, 0x44, 0x56, 0x05, 0x17, 0xd1, 0x33, 0x65,
	0x32, 0x42, 0x46, 0xb7, 0xe1, 0x5a, 0x29, 0x26, 0xcb, 0x7d, 0x89, 0x8f, 0xec, 0x0a, 0x8e, 0x59,
	0x80, 0x92, 0x00, 0x39, 0xde, 0x81, 0xd5, 0x33, 0x60, 0x22, 0xb3, 0x25, 0x21, 0xb2, 0x9c, 0xb5,
	0x7a, 0x96, 0xa5, 0x92, 0xef, 0x24, 0xf4, 0xe1, 0xc7, 0xb0, 0xe6, 0x04, 0x93, 0x7b, 0xcc, 0x8e,
	0x03, 0x36, 0xf2, 0xc6, 0xf6, 0x01, 0x53, 0x95, 0xcf, 0xd8, 0x3b, 0x90, 0xff, 0xd8, 0x3b, 0x48,
	0x0e, 0x1f, 0x76, 0xf7, 0x05, 0x11, 0xb9, 0x1e, 0x34, 0xc4, 0xc4, 0x47, 0x7f, 0x0c, 0x00, 0x00,
	0xff, 0xff, 0xae, 0x03, 0x03, 0xb2, 0xf1, 0x27, 0x00, 0x00,
}
